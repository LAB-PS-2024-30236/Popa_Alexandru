{"ast":null,"code":"var _jsxFileName = \"D:\\\\an3_facultate\\\\sem1\\\\IS\\\\laboratoare\\\\SocialApp-Fe\\\\social-media-front\\\\src\\\\components\\\\messaging\\\\MessageCard\\\\MessageCard.tsx\";\nimport React from \"react\";\nimport LText from \"../../core/LText/LText\";\nimport BText from \"../../core/BText/BText\";\nimport { getTime } from \"../../../utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageCard = ({\n  photo,\n  fullName,\n  message,\n  date,\n  isRead,\n  isDarkMode,\n  onClick\n}) => {\n  const formatMessage = msg => {\n    if (msg.startsWith('https')) {\n      return 'Sent a photo' + ' • ' + getTime(date);\n    }\n    return msg + ' • ' + getTime(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message-card ${isDarkMode ? 'dark-mode' : ''}`,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: photo,\n      className: \"message-card-img\",\n      alt: fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-card-text\",\n      children: [/*#__PURE__*/_jsxDEV(BText, {\n        text: fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), isRead ? /*#__PURE__*/_jsxDEV(LText, {\n        text: formatMessage(message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(BText, {\n        text: formatMessage(message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n};\n_c = MessageCard;\nexport default MessageCard;\nvar _c;\n$RefreshReg$(_c, \"MessageCard\");","map":{"version":3,"names":["React","LText","BText","getTime","jsxDEV","_jsxDEV","MessageCard","photo","fullName","message","date","isRead","isDarkMode","onClick","formatMessage","msg","startsWith","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","text","_c","$RefreshReg$"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/components/messaging/MessageCard/MessageCard.tsx"],"sourcesContent":["import React from \"react\";\r\nimport LText from \"../../core/LText/LText\";\r\nimport BText from \"../../core/BText/BText\";\r\nimport { getTime } from \"../../../utils/utils\";\r\n\r\ninterface MessageCardProps {\r\n    photo: string;\r\n    fullName: string;\r\n    message: string;\r\n    date: string;\r\n    isRead: boolean;\r\n    isDarkMode: boolean;\r\n    onClick: () => void;\r\n}\r\n\r\nconst MessageCard: React.FC<MessageCardProps> =\r\n    ({ photo,\r\n         fullName,\r\n         message,\r\n         date,\r\n         isRead,\r\n         isDarkMode,\r\n         onClick}) => {\r\n\r\n        const formatMessage = (msg: string) => {\r\n            if (msg.startsWith('https')) {\r\n                return 'Sent a photo'+ ' • ' + getTime(date);\r\n            }\r\n            return msg + ' • ' + getTime(date);\r\n        };\r\n\r\n        return (\r\n            <div className={`message-card ${isDarkMode ? 'dark-mode' : ''}`} onClick={onClick}>\r\n                <img src={photo} className='message-card-img' alt={fullName}/>\r\n                <div className='message-card-text'>\r\n                    <BText text={fullName}/>\r\n                    {isRead ? (\r\n                        <LText text={formatMessage(message)}/>\r\n                    ) : (\r\n                        <BText text={formatMessage(message)}/>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\nexport default MessageCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,SAASC,OAAO,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY/C,MAAMC,WAAuC,GACzCA,CAAC;EAAEC,KAAK;EACHC,QAAQ;EACRC,OAAO;EACPC,IAAI;EACJC,MAAM;EACNC,UAAU;EACVC;AAAO,CAAC,KAAK;EAEd,MAAMC,aAAa,GAAIC,GAAW,IAAK;IACnC,IAAIA,GAAG,CAACC,UAAU,CAAC,OAAO,CAAC,EAAE;MACzB,OAAO,cAAc,GAAE,KAAK,GAAGb,OAAO,CAACO,IAAI,CAAC;IAChD;IACA,OAAOK,GAAG,GAAG,KAAK,GAAGZ,OAAO,CAACO,IAAI,CAAC;EACtC,CAAC;EAED,oBACIL,OAAA;IAAKY,SAAS,EAAG,gBAAeL,UAAU,GAAG,WAAW,GAAG,EAAG,EAAE;IAACC,OAAO,EAAEA,OAAQ;IAAAK,QAAA,gBAC9Eb,OAAA;MAAKc,GAAG,EAAEZ,KAAM;MAACU,SAAS,EAAC,kBAAkB;MAACG,GAAG,EAAEZ;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9DnB,OAAA;MAAKY,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9Bb,OAAA,CAACH,KAAK;QAACuB,IAAI,EAAEjB;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACvBb,MAAM,gBACHN,OAAA,CAACJ,KAAK;QAACwB,IAAI,EAAEX,aAAa,CAACL,OAAO;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,gBAEtCnB,OAAA,CAACH,KAAK;QAACuB,IAAI,EAAEX,aAAa,CAACL,OAAO;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CACxC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACE,EAAA,GA7BApB,WAAuC;AA+B7C,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}