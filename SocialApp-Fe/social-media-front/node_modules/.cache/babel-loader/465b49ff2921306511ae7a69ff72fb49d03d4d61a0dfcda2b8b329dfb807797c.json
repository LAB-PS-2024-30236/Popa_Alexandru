{"ast":null,"code":"var _jsxFileName = \"D:\\\\an3_facultate\\\\sem1\\\\IS\\\\laboratoare\\\\SocialApp-Fe\\\\social-media-front\\\\src\\\\widgets\\\\post-create-widget\\\\PostCreateWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport Line from \"../../components/core/Line/Line\";\nimport { createPost } from \"./model/effects\";\nimport { sessionSelect } from \"../../redux/core/session/selectors\";\nimport './PostCreateWidget.css';\nimport { storage } from \"../../../firebase\";\nimport { ref } from '@firebase/storage';\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCreateWidget = () => {\n  _s();\n  const userId = useSelector(sessionSelect.userId);\n  const [description, setDescription] = useState('');\n  const [file, setFile] = useState(null);\n  const datePosted = new Date().toISOString().split('T')[0];\n  const dispatch = useDispatch();\n  const handleDescriptionChange = event => setDescription(event.target.value);\n  const handleFileChange = event => {\n    setFile(event.target.files ? event.target.files[0] : null);\n  };\n  const uploadImage = () => {\n    const imageRef = ref(storage, 'images/' + userId + (file === null || file === void 0 ? void 0 : file.name) + v4());\n  };\n  const handleSubmit = async () => {\n    if (file) {\n      await createPost({\n        userId,\n        photo: \"test\",\n        datePosted,\n        description,\n        dispatch\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"widget-main-create\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Description\",\n          type: \"text\",\n          onChange: handleDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(PostCreateWidget, \"WlFRoS+4tHzpx7cMaojvZ63njZ0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = PostCreateWidget;\nexport default PostCreateWidget;\nvar _c;\n$RefreshReg$(_c, \"PostCreateWidget\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Button","Line","createPost","sessionSelect","storage","ref","v4","jsxDEV","_jsxDEV","PostCreateWidget","_s","userId","description","setDescription","file","setFile","datePosted","Date","toISOString","split","dispatch","handleDescriptionChange","event","target","value","handleFileChange","files","uploadImage","imageRef","name","handleSubmit","photo","className","children","placeholder","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/widgets/post-create-widget/PostCreateWidget.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport Line from \"../../components/core/Line/Line\";\r\nimport {createPost} from \"./model/effects\";\r\nimport {sessionSelect} from \"../../redux/core/session/selectors\";\r\nimport './PostCreateWidget.css';\r\nimport {storage} from \"../../../firebase\";\r\nimport {ref, uploadBytes} from '@firebase/storage'\r\nimport {v4} from 'uuid'\r\n\r\nconst PostCreateWidget: React.FC = () => {\r\n    const userId = useSelector(sessionSelect.userId);\r\n    const [description, setDescription] = useState<string>('');\r\n    const [file, setFile] = useState<File | null>(null);\r\n\r\n    const datePosted = new Date().toISOString().split('T')[0];\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => setDescription(event.target.value);\r\n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFile(event.target.files ? event.target.files[0] : null);\r\n    };\r\n\r\n    const uploadImage = () => {\r\n        const imageRef = ref(storage, 'images/' + userId + file?.name +v4());\r\n        \r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (file) {\r\n\r\n            await createPost({\r\n                userId, photo: \"test\", datePosted, description, dispatch\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className='widget-main-create'>\r\n            <div>\r\n                <div>\r\n                    <input\r\n                        placeholder=\"Description\"\r\n                        type='text'\r\n                        onChange={handleDescriptionChange}/>\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={handleFileChange}/>\r\n                </div>\r\n                <Button onClick={handleSubmit}>Create Post</Button>\r\n                <Line/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCreateWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}