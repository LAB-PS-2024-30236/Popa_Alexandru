{"ast":null,"code":"var _jsxFileName = \"D:\\\\an3_facultate\\\\sem1\\\\IS\\\\laboratoare\\\\SocialApp-Fe\\\\social-media-front\\\\src\\\\widgets\\\\post-create-widget\\\\PostCreateWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport Line from \"../../components/core/Line/Line\";\nimport { createPost } from \"./model/effects\";\nimport { sessionSelect } from \"../../redux/core/session/selectors\";\nimport './PostCreateWidget.css';\nimport { storage } from \"../../../firebase\";\nimport { ref, uploadBytes, getDownloadURL } from '@firebase/storage';\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCreateWidget = () => {\n  _s();\n  const userId = useSelector(sessionSelect.userId);\n  const [description, setDescription] = useState('');\n  const [file, setFile] = useState(null);\n  const datePosted = new Date().toISOString().split('T')[0];\n  const dispatch = useDispatch();\n  const handleDescriptionChange = event => setDescription(event.target.value);\n  const handleFileChange = event => {\n    setFile(event.target.files ? event.target.files[0] : null);\n  };\n  const uploadImage = async () => {\n    if (file) {\n      const imageRef = ref(storage, `images/${userId}_${file.name}_${v4()}`);\n      try {\n        const snapshot = await uploadBytes(imageRef, file);\n        return getDownloadURL(snapshot.ref);\n      } catch (error) {\n        alert(\"Failed to upload image: \" + error);\n        throw error; // This stops the post creation if the upload fails\n      }\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (file) {\n        const photoURL = await uploadImage();\n        await createPost({\n          userId,\n          photo: photoURL,\n          datePosted,\n          description,\n          dispatch\n        });\n        alert(\"Post created successfully!\");\n      }\n    } catch (error) {\n      console.error(\"Failed to create post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"widget-main-create\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Description\",\n          type: \"text\",\n          onChange: handleDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(PostCreateWidget, \"WlFRoS+4tHzpx7cMaojvZ63njZ0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = PostCreateWidget;\nexport default PostCreateWidget;\nvar _c;\n$RefreshReg$(_c, \"PostCreateWidget\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Button","Line","createPost","sessionSelect","storage","ref","uploadBytes","getDownloadURL","v4","jsxDEV","_jsxDEV","PostCreateWidget","_s","userId","description","setDescription","file","setFile","datePosted","Date","toISOString","split","dispatch","handleDescriptionChange","event","target","value","handleFileChange","files","uploadImage","imageRef","name","snapshot","error","alert","handleSubmit","photoURL","photo","console","className","children","placeholder","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/widgets/post-create-widget/PostCreateWidget.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Line from \"../../components/core/Line/Line\";\r\nimport { createPost } from \"./model/effects\";\r\nimport { sessionSelect } from \"../../redux/core/session/selectors\";\r\nimport './PostCreateWidget.css';\r\nimport { storage } from \"../../../firebase\";\r\nimport { ref, uploadBytes, getDownloadURL } from '@firebase/storage';\r\nimport { v4 } from 'uuid';\r\n\r\nconst PostCreateWidget: React.FC = () => {\r\n    const userId = useSelector(sessionSelect.userId);\r\n    const [description, setDescription] = useState<string>('');\r\n    const [file, setFile] = useState<File | null>(null);\r\n    const datePosted = new Date().toISOString().split('T')[0];\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => setDescription(event.target.value);\r\n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFile(event.target.files ? event.target.files[0] : null);\r\n    };\r\n\r\n    const uploadImage = async () => {\r\n        if (file) {\r\n            const imageRef = ref(storage, `images/${userId}_${file.name}_${v4()}`);\r\n            try {\r\n                const snapshot = await uploadBytes(imageRef, file);\r\n                return getDownloadURL(snapshot.ref);\r\n            } catch (error) {\r\n                alert(\"Failed to upload image: \" + error);\r\n                throw error; // This stops the post creation if the upload fails\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            if (file) {\r\n                const photoURL = await uploadImage();\r\n                await createPost({\r\n                    userId, photo: photoURL, datePosted, description, dispatch\r\n                });\r\n                alert(\"Post created successfully!\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Failed to create post:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='widget-main-create'>\r\n            <div>\r\n                <div>\r\n                    <input\r\n                        placeholder=\"Description\"\r\n                        type='text'\r\n                        onChange={handleDescriptionChange} />\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={handleFileChange} />\r\n                </div>\r\n                <Button onClick={handleSubmit}>Create Post</Button>\r\n                <Line />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostCreateWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}