{"ast":null,"code":"export const getMessageShape = ({\n  messages,\n  index\n}) => {\n  let firstCorner = false;\n  let secondCorner = false;\n  if (index === 0) {\n    firstCorner = true;\n  }\n  if (index === messages.length - 1) {\n    secondCorner = true;\n  }\n  if (index > 0 && messages[index - 1].senderId !== messages[index].senderId) firstCorner = true;\n  if (index < messages.length - 1 && messages[index + 1].senderId !== messages[index].senderId) secondCorner = true;\n  return [firstCorner, secondCorner];\n};\nexport const getTime = timestamp => {\n  const currentTime = new Date();\n  const timeDifference = currentTime.getTime() - new Date(timestamp).getTime();\n  const seconds = Math.floor(timeDifference / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  if (seconds < 60) {\n    return 'now';\n  } else if (minutes < 60) {\n    return `${minutes}m ago`;\n  } else if (hours < 24) {\n    return `${hours}h ago`;\n  } else {\n    return `${days}d ago`;\n  }\n};","map":{"version":3,"names":["getMessageShape","messages","index","firstCorner","secondCorner","length","senderId","getTime","timestamp","currentTime","Date","timeDifference","seconds","Math","floor","minutes","hours","days"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/utils/utils.ts"],"sourcesContent":["import {Chat} from \"../widgets/messaging-overview-widget/model/types\";\r\n\r\ninterface UtilParameters {\r\n    messages: Chat[];\r\n    index: number;\r\n}\r\n\r\nexport const getMessageShape = ({messages, index}: UtilParameters) => {\r\n    let firstCorner: boolean = false;\r\n    let secondCorner: boolean = false;\r\n    if(index === 0) {\r\n        firstCorner = true;\r\n    }\r\n    if(index === messages.length - 1) {\r\n        secondCorner = true;\r\n    }\r\n    if(index > 0 && messages[index-1].senderId !== messages[index].senderId)\r\n        firstCorner = true;\r\n    if(index < messages.length -1 && messages[index + 1].senderId !== messages[index].senderId)\r\n        secondCorner = true;\r\n    return [firstCorner, secondCorner];\r\n}\r\n\r\nexport const getTime = (timestamp: string) => {\r\n    const currentTime = new Date();\r\n    const timeDifference = currentTime.getTime() - new Date(timestamp).getTime();\r\n\r\n    const seconds = Math.floor(timeDifference / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n    const days = Math.floor(hours / 24);\r\n\r\n    if (seconds < 60) {\r\n        return 'now';\r\n    } else if (minutes < 60) {\r\n        return `${minutes}m ago`;\r\n    } else if (hours < 24) {\r\n        return `${hours}h ago`;\r\n    } else {\r\n        return `${days}d ago`;\r\n    }\r\n}"],"mappings":"AAOA,OAAO,MAAMA,eAAe,GAAGA,CAAC;EAACC,QAAQ;EAAEC;AAAqB,CAAC,KAAK;EAClE,IAAIC,WAAoB,GAAG,KAAK;EAChC,IAAIC,YAAqB,GAAG,KAAK;EACjC,IAAGF,KAAK,KAAK,CAAC,EAAE;IACZC,WAAW,GAAG,IAAI;EACtB;EACA,IAAGD,KAAK,KAAKD,QAAQ,CAACI,MAAM,GAAG,CAAC,EAAE;IAC9BD,YAAY,GAAG,IAAI;EACvB;EACA,IAAGF,KAAK,GAAG,CAAC,IAAID,QAAQ,CAACC,KAAK,GAAC,CAAC,CAAC,CAACI,QAAQ,KAAKL,QAAQ,CAACC,KAAK,CAAC,CAACI,QAAQ,EACnEH,WAAW,GAAG,IAAI;EACtB,IAAGD,KAAK,GAAGD,QAAQ,CAACI,MAAM,GAAE,CAAC,IAAIJ,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAC,CAACI,QAAQ,KAAKL,QAAQ,CAACC,KAAK,CAAC,CAACI,QAAQ,EACtFF,YAAY,GAAG,IAAI;EACvB,OAAO,CAACD,WAAW,EAAEC,YAAY,CAAC;AACtC,CAAC;AAED,OAAO,MAAMG,OAAO,GAAIC,SAAiB,IAAK;EAC1C,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC9B,MAAMC,cAAc,GAAGF,WAAW,CAACF,OAAO,CAAC,CAAC,GAAG,IAAIG,IAAI,CAACF,SAAS,CAAC,CAACD,OAAO,CAAC,CAAC;EAE5E,MAAMK,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,cAAc,GAAG,IAAI,CAAC;EACjD,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;EACxC,MAAMI,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACC,OAAO,GAAG,EAAE,CAAC;EACtC,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,EAAE,CAAC;EAEnC,IAAIJ,OAAO,GAAG,EAAE,EAAE;IACd,OAAO,KAAK;EAChB,CAAC,MAAM,IAAIG,OAAO,GAAG,EAAE,EAAE;IACrB,OAAQ,GAAEA,OAAQ,OAAM;EAC5B,CAAC,MAAM,IAAIC,KAAK,GAAG,EAAE,EAAE;IACnB,OAAQ,GAAEA,KAAM,OAAM;EAC1B,CAAC,MAAM;IACH,OAAQ,GAAEC,IAAK,OAAM;EACzB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}