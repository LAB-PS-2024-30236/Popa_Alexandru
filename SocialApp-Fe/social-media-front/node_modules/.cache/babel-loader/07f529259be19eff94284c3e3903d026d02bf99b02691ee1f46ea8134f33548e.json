{"ast":null,"code":"var _jsxFileName = \"D:\\\\an3_facultate\\\\sem1\\\\IS\\\\laboratoare\\\\SocialApp-Fe\\\\social-media-front\\\\src\\\\components\\\\messaging\\\\ChatOverview\\\\ChatOverview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Stomp } from '@stomp/stompjs';\nimport { useNavigate } from \"react-router-dom\";\nimport Phone from '../../../assets/icons/phone.svg';\nimport Video from '../../../assets/icons/video.svg';\nimport Dots from '../../../assets/icons/dots-vertical.svg';\nimport Chat from '../../../assets/icons/chat.svg';\nimport Image from '../../../assets/icons/image.svg';\nimport Heart from '../../../assets/icons/heart.svg';\nimport Send from '../../../assets/icons/send.svg';\nimport BText from \"../../core/BText/BText\";\nimport LText from \"../../core/LText/LText\";\nimport Button from \"../../core/Button/Button\";\nimport MessageBubble from \"../MessageBubble/MessageBubble\";\nimport { sessionSelect } from \"../../../redux/core/session/selectors\";\nimport { messageSelect } from \"../../../widgets/messaging-overview-widget/model/selectors\";\nimport { setCurrentProfile } from \"../../../widgets/profile-overview-widget/model/reducers\";\nimport { getMessageShape } from \"../../../utils/utils\";\nimport { newChatMessageReceived } from \"../../../widgets/messaging-overview-widget/model/reducers\";\nimport { ref as storageRef, uploadBytes, getDownloadURL } from '@firebase/storage';\nimport { v4 as uuidv4 } from 'uuid';\nimport { storage } from \"../../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatOverview = () => {\n  _s();\n  const currentConversation = useSelector(messageSelect.currentConversation);\n  const messages = useSelector(messageSelect.currentChat);\n  const myUserId = useSelector(sessionSelect.userId);\n  const jwtToken = useSelector(sessionSelect.jwtToken);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [message, setMessage] = useState('');\n  const [connected, setConnected] = useState(false);\n  const isFirst = currentConversation.userId === '';\n  const stompClientRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleImageChange = event => {\n    const files = event.target.files;\n    if (files && files[0]) {\n      setImage(files[0]);\n      setPreview(URL.createObjectURL(files[0]));\n    }\n  };\n  const uploadImage = async () => {\n    if (image) {\n      const imageRef = storageRef(storage, `images/${myUserId}_${image.name}_${uuidv4()}`);\n      try {\n        const snapshot = await uploadBytes(imageRef, image);\n        return await getDownloadURL(snapshot.ref);\n      } catch (error) {\n        console.error(\"Failed to upload image:\", error);\n        throw error;\n      }\n    }\n    throw new Error(\"No image selected\");\n  };\n  const sendImage = async () => {\n    try {\n      const imageUrl = await uploadImage();\n      // Here, you can send the `imageUrl` in a message or however you handle image messages in your chat.\n      // For example:\n      // sendMessageWithImage(imageUrl);\n      // The implementation of `sendMessageWithImage` would be similar to `sendMessage`\n      // but would include the image URL in the message payload.\n\n      // Clear the preview and file after sending the image\n      setImage(null);\n      setPreview(null);\n    } catch (error) {\n      console.error(\"Error sending image:\", error);\n      alert(error);\n    }\n  };\n  const handleImageIconClick = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight;\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages.length]);\n  const connect = () => {\n    const socket = new WebSocket(`ws://localhost:8083/chat/websocket?token=${jwtToken}`);\n    const stompClient = Stomp.over(socket);\n    stompClient.debug = console.log;\n    stompClient.connect({}, () => {\n      setConnected(true);\n      console.log('Connected: ' + stompClient.connected);\n      stompClientRef.current = stompClient;\n      const receiveQueue = `/queue/${currentConversation.userId}/${myUserId}`;\n      stompClient.subscribe(receiveQueue, message => {\n        console.log(\"Received message\", message.body);\n        const parsedMessage = JSON.parse(message.body);\n        const chatMessage = {\n          senderId: parsedMessage.senderId,\n          receiverId: parsedMessage.receiverId,\n          content: parsedMessage.content,\n          timestamp: parsedMessage.timestamp,\n          isRead: false,\n          isEdited: false\n        };\n        dispatch(newChatMessageReceived(chatMessage));\n      });\n    }, error => {\n      console.error('Connection error:', error);\n    });\n  };\n  const disconnect = () => {\n    if (connected && stompClientRef.current) {\n      stompClientRef.current.disconnect(() => {\n        console.log(\"Disconnected\");\n        setConnected(false);\n      });\n    }\n  };\n  const sendMessage = () => {\n    if (connected && stompClientRef.current) {\n      const messageToSend = {\n        senderId: myUserId,\n        receiverId: currentConversation.userId,\n        content: message,\n        timestamp: new Date().toISOString()\n      };\n      if (myUserId === currentConversation.userId) {\n        const sendQueue = `/queue/${myUserId}/${currentConversation.userId}`;\n        stompClientRef.current.send(sendQueue, {}, JSON.stringify(messageToSend));\n        const sendEndpoint = \"/app/sendMessage\";\n        stompClientRef.current.send(sendEndpoint, {}, JSON.stringify(messageToSend));\n      } else {\n        const sendQueue = `/queue/${myUserId}/${currentConversation.userId}`;\n        stompClientRef.current.send(sendQueue, {}, JSON.stringify(messageToSend));\n        const sendQueue1 = `/queue/${currentConversation.userId}/${myUserId}`;\n        stompClientRef.current.send(sendQueue1, {}, JSON.stringify(messageToSend));\n        const sendEndpoint = \"/app/sendMessage\";\n        stompClientRef.current.send(sendEndpoint, {}, JSON.stringify(messageToSend));\n      }\n      setMessage('');\n      setTimeout(() => {\n        scrollToBottom();\n      }, 100);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey && message !== '') {\n      event.preventDefault();\n      sendMessage();\n    }\n  };\n  const onMessageChange = event => {\n    setMessage(event.target.value);\n  };\n  useEffect(() => {\n    connect();\n    return () => {\n      disconnect();\n    };\n  }, [currentConversation.userId, jwtToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isFirst ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-overview-opening\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-overview-opening-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-overview-opening-icon-back\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Chat,\n            className: \"chat-overview-opening-icon\",\n            alt: \"Chat Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(BText, {\n          text: \"Your messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LText, {\n          text: \"Send private photos and messages to a friend or group.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Send message\",\n          onClick: () => console.log('Send message')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-overview-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-overview-header-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentConversation.profilePicture,\n            alt: \"Profile\",\n            className: \"chat-overview-header-picture\",\n            onClick: () => {\n              dispatch(setCurrentProfile(currentConversation.userId));\n              navigate('/profile');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(BText, {\n            text: `${currentConversation.firstName} ${currentConversation.lastName}`,\n            onClick: () => {\n              dispatch(setCurrentProfile(currentConversation.userId));\n              navigate('/profile');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-overview-header-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Phone,\n            alt: \"Phone Call\",\n            className: \"chat-overview-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Video,\n            alt: \"Video Call\",\n            className: \"chat-overview-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Dots,\n            alt: \"More Options\",\n            className: \"chat-overview-icon\",\n            onClick: () => {\n              dispatch(setCurrentProfile(currentConversation.userId));\n              navigate('/profile');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-overview-messages-container\",\n        ref: messagesEndRef,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          content: msg.content,\n          isMine: msg.senderId === myUserId,\n          firstCorner: getMessageShape({\n            messages,\n            index\n          })[0],\n          secondCorner: getMessageShape({\n            messages,\n            index\n          })[1]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-overview-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-overview-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"chat-overview-chat\",\n            placeholder: \"Message...\",\n            value: message,\n            onChange: onMessageChange,\n            onKeyDown: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: fileInputRef,\n            type: \"file\",\n            onChange: handleImageChange,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), preview ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: preview,\n            alt: \"Preview\",\n            className: \"chat-overview-image-preview\",\n            onClick: sendImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-overview-bottom-icons\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Image,\n              alt: \"Send Image\",\n              className: \"chat-overview-icon\",\n              onClick: handleImageIconClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Heart,\n              alt: \"Send Love\",\n              className: \"chat-overview-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 33\n          }, this), message.length === 0 && !preview && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-overview-bottom-icons\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Send,\n              alt: \"Send Message\",\n              className: \"chat-overview-icon\",\n              onClick: sendMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatOverview, \"pEcv8DSy6bDlMizdeF9LID7VpLM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch, useNavigate];\n});\n_c = ChatOverview;\nexport default ChatOverview;\nvar _c;\n$RefreshReg$(_c, \"ChatOverview\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useDispatch","useSelector","Stomp","useNavigate","Phone","Video","Dots","Chat","Image","Heart","Send","BText","LText","Button","MessageBubble","sessionSelect","messageSelect","setCurrentProfile","getMessageShape","newChatMessageReceived","ref","storageRef","uploadBytes","getDownloadURL","v4","uuidv4","storage","jsxDEV","_jsxDEV","ChatOverview","_s","currentConversation","messages","currentChat","myUserId","userId","jwtToken","dispatch","navigate","message","setMessage","connected","setConnected","isFirst","stompClientRef","messagesEndRef","image","setImage","preview","setPreview","fileInputRef","handleImageChange","event","files","target","URL","createObjectURL","uploadImage","imageRef","name","snapshot","error","console","Error","sendImage","imageUrl","alert","handleImageIconClick","_fileInputRef$current","current","click","scrollToBottom","scrollTop","scrollHeight","length","connect","socket","WebSocket","stompClient","over","debug","log","receiveQueue","subscribe","body","parsedMessage","JSON","parse","chatMessage","senderId","receiverId","content","timestamp","isRead","isEdited","disconnect","sendMessage","messageToSend","Date","toISOString","sendQueue","send","stringify","sendEndpoint","sendQueue1","setTimeout","handleKeyPress","key","shiftKey","preventDefault","onMessageChange","value","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","profilePicture","firstName","lastName","map","msg","index","isMine","firstCorner","secondCorner","type","placeholder","onChange","onKeyDown","style","display","_c","$RefreshReg$"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/components/messaging/ChatOverview/ChatOverview.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CompatClient, Stomp} from '@stomp/stompjs';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nimport Phone from '../../../assets/icons/phone.svg';\r\nimport Video from '../../../assets/icons/video.svg';\r\nimport Dots from '../../../assets/icons/dots-vertical.svg';\r\nimport Chat from '../../../assets/icons/chat.svg';\r\nimport Image from '../../../assets/icons/image.svg';\r\nimport Heart from '../../../assets/icons/heart.svg';\r\nimport Send from '../../../assets/icons/send.svg';\r\n\r\nimport BText from \"../../core/BText/BText\";\r\nimport LText from \"../../core/LText/LText\";\r\nimport Button from \"../../core/Button/Button\";\r\nimport MessageBubble from \"../MessageBubble/MessageBubble\";\r\n\r\nimport {sessionSelect} from \"../../../redux/core/session/selectors\";\r\nimport {messageSelect} from \"../../../widgets/messaging-overview-widget/model/selectors\";\r\nimport {setCurrentProfile} from \"../../../widgets/profile-overview-widget/model/reducers\";\r\nimport {getMessageShape} from \"../../../utils/utils\";\r\nimport {newChatMessageReceived} from \"../../../widgets/messaging-overview-widget/model/reducers\";\r\nimport { ref as storageRef, uploadBytes, getDownloadURL } from '@firebase/storage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { storage } from \"../../../firebase\";\r\n\r\nconst ChatOverview = () => {\r\n    const currentConversation = useSelector(messageSelect.currentConversation);\r\n    const messages = useSelector(messageSelect.currentChat);\r\n    const myUserId = useSelector(sessionSelect.userId);\r\n    const jwtToken = useSelector(sessionSelect.jwtToken);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [connected, setConnected] = useState(false);\r\n    const isFirst = currentConversation.userId === '';\r\n    const stompClientRef = useRef<CompatClient | null>(null);\r\n    const messagesEndRef = useRef<HTMLDivElement | null>(null);\r\n    const [image, setImage] = useState<File | null>(null);\r\n    const [preview, setPreview] = useState<string | null>(null);\r\n    const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n\r\n    const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = event.target.files;\r\n        if (files && files[0]) {\r\n            setImage(files[0]);\r\n            setPreview(URL.createObjectURL(files[0]));\r\n        }\r\n    };\r\n\r\n    const uploadImage = async () => {\r\n        if (image) {\r\n            const imageRef = storageRef(storage, `images/${myUserId}_${image.name}_${uuidv4()}`);\r\n            try {\r\n                const snapshot = await uploadBytes(imageRef, image);\r\n                return await getDownloadURL(snapshot.ref);\r\n            } catch (error) {\r\n                console.error(\"Failed to upload image:\", error);\r\n                throw error;\r\n            }\r\n        }\r\n        throw new Error(\"No image selected\");\r\n    };\r\n\r\n    const sendImage = async () => {\r\n        try {\r\n            const imageUrl = await uploadImage();\r\n            // Here, you can send the `imageUrl` in a message or however you handle image messages in your chat.\r\n            // For example:\r\n            // sendMessageWithImage(imageUrl);\r\n            // The implementation of `sendMessageWithImage` would be similar to `sendMessage`\r\n            // but would include the image URL in the message payload.\r\n\r\n            // Clear the preview and file after sending the image\r\n            setImage(null);\r\n            setPreview(null);\r\n        } catch (error) {\r\n            console.error(\"Error sending image:\", error);\r\n            alert(error);\r\n        }\r\n    };\r\n\r\n    const handleImageIconClick = () => {\r\n        fileInputRef.current?.click();\r\n    };\r\n\r\n    const scrollToBottom = () => {\r\n        if (messagesEndRef.current) {\r\n            messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight;\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages.length]);\r\n\r\n    const connect = () => {\r\n        const socket = new WebSocket(`ws://localhost:8083/chat/websocket?token=${jwtToken}`);\r\n        const stompClient = Stomp.over(socket);\r\n        stompClient.debug = console.log;\r\n\r\n        stompClient.connect({}, () => {\r\n            setConnected(true);\r\n            console.log('Connected: ' + stompClient.connected);\r\n            stompClientRef.current = stompClient;\r\n\r\n            const receiveQueue = `/queue/${currentConversation.userId}/${myUserId}`;\r\n            stompClient.subscribe(receiveQueue, message => {\r\n                console.log(\"Received message\", message.body);\r\n                const parsedMessage = JSON.parse(message.body);\r\n                const chatMessage = {\r\n                    senderId: parsedMessage.senderId,\r\n                    receiverId: parsedMessage.receiverId,\r\n                    content: parsedMessage.content,\r\n                    timestamp: parsedMessage.timestamp,\r\n                    isRead: false,\r\n                    isEdited: false\r\n                };\r\n                dispatch(newChatMessageReceived(chatMessage));\r\n            });\r\n        }, (error: any) => {\r\n            console.error('Connection error:', error);\r\n        });\r\n    };\r\n\r\n    const disconnect = () => {\r\n        if (connected && stompClientRef.current) {\r\n            stompClientRef.current.disconnect(() => {\r\n                console.log(\"Disconnected\");\r\n                setConnected(false);\r\n            });\r\n        }\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (connected && stompClientRef.current) {\r\n            const messageToSend = {\r\n                senderId: myUserId,\r\n                receiverId: currentConversation.userId,\r\n                content: message,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n            if (myUserId === currentConversation.userId) {\r\n                const sendQueue = `/queue/${myUserId}/${currentConversation.userId}`;\r\n                stompClientRef.current.send(sendQueue, {}, JSON.stringify(messageToSend));\r\n                const sendEndpoint = \"/app/sendMessage\";\r\n                stompClientRef.current.send(sendEndpoint, {}, JSON.stringify(messageToSend));\r\n            } else {\r\n                const sendQueue = `/queue/${myUserId}/${currentConversation.userId}`;\r\n                stompClientRef.current.send(sendQueue, {}, JSON.stringify(messageToSend));\r\n                const sendQueue1 = `/queue/${currentConversation.userId}/${myUserId}`;\r\n                stompClientRef.current.send(sendQueue1, {}, JSON.stringify(messageToSend));\r\n                const sendEndpoint = \"/app/sendMessage\";\r\n                stompClientRef.current.send(sendEndpoint, {}, JSON.stringify(messageToSend));\r\n            }\r\n\r\n            setMessage('');\r\n            setTimeout(() => {\r\n                scrollToBottom();\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (event: { key: string; shiftKey: any; preventDefault: () => void; }) => {\r\n        if (event.key === 'Enter' && !event.shiftKey && message!=='') {\r\n            event.preventDefault();\r\n            sendMessage();\r\n        }\r\n    };\r\n    const onMessageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setMessage(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        connect();\r\n        return () => {\r\n            disconnect();\r\n        };\r\n    }, [currentConversation.userId, jwtToken]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {isFirst ? (\r\n                <div className='chat-overview-opening'>\r\n                    <div className='chat-overview-opening-container'>\r\n                        <div className='chat-overview-opening-icon-back'>\r\n                            <img src={Chat} className='chat-overview-opening-icon' alt=\"Chat Icon\"/>\r\n                        </div>\r\n                        <BText text='Your messages'/>\r\n                        <LText text='Send private photos and messages to a friend or group.'/>\r\n                        <Button content='Send message' onClick={() => console.log('Send message')}/>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='chat-overview'>\r\n                    <div className='chat-overview-header'>\r\n                        <div className='chat-overview-header-info'>\r\n                            <img\r\n                                src={currentConversation.profilePicture}\r\n                                alt=\"Profile\"\r\n                                className='chat-overview-header-picture'\r\n                                onClick={() => {\r\n                                    dispatch(setCurrentProfile(currentConversation.userId));\r\n                                    navigate('/profile');\r\n                                }}\r\n                            />\r\n                            <BText text={`${currentConversation.firstName} ${currentConversation.lastName}`}\r\n                                   onClick={() => {\r\n                                       dispatch(setCurrentProfile(currentConversation.userId));\r\n                                       navigate('/profile');\r\n                                   }}/>\r\n                        </div>\r\n                        <div className='chat-overview-header-actions'>\r\n                            <img src={Phone} alt=\"Phone Call\" className='chat-overview-icon'/>\r\n                            <img src={Video} alt=\"Video Call\" className='chat-overview-icon'/>\r\n                            <img src={Dots} alt=\"More Options\" className='chat-overview-icon' onClick={() => {\r\n                                dispatch(setCurrentProfile(currentConversation.userId));\r\n                                navigate('/profile');\r\n                            }}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='chat-overview-messages-container' ref={messagesEndRef}>\r\n                        {messages.map((msg, index) => (\r\n                            <MessageBubble\r\n                                key={index}\r\n                                content={msg.content}\r\n                                isMine={msg.senderId === myUserId}\r\n                                firstCorner={getMessageShape({messages, index})[0]}\r\n                                secondCorner={getMessageShape({messages, index})[1]}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <div className='chat-overview-bottom'>\r\n                        <div className='chat-overview-form'>\r\n                            <input\r\n                                type='text'\r\n                                className='chat-overview-chat'\r\n                                placeholder='Message...'\r\n                                value={message}\r\n                                onChange={onMessageChange}\r\n                                onKeyDown={handleKeyPress}\r\n                            />\r\n                            <input\r\n                                ref={fileInputRef}\r\n                                type=\"file\"\r\n                                onChange={handleImageChange}\r\n                                style={{display: 'none'}}\r\n                            />\r\n                            {preview ? (\r\n                                <img src={preview} alt=\"Preview\" className='chat-overview-image-preview'\r\n                                     onClick={sendImage}/>\r\n                            ) : (\r\n                                <div className='chat-overview-bottom-icons'>\r\n                                    <img src={Image} alt=\"Send Image\" className='chat-overview-icon'\r\n                                         onClick={handleImageIconClick}/>\r\n                                    <img src={Heart} alt=\"Send Love\" className='chat-overview-icon'/>\r\n                                </div>\r\n                            )}\r\n                            {message.length === 0 && !preview && (\r\n                                <div className='chat-overview-bottom-icons'>\r\n                                    <img src={Send} alt=\"Send Message\" className='chat-overview-icon'\r\n                                         onClick={sendMessage}/>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatOverview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}