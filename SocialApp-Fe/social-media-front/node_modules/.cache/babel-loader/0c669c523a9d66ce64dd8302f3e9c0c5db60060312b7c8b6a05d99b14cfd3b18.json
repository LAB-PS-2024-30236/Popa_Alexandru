{"ast":null,"code":"var _jsxFileName = \"D:\\\\an3_facultate\\\\sem1\\\\IS\\\\laboratoare\\\\SocialApp-Fe\\\\social-media-front\\\\src\\\\components\\\\messaging\\\\ChatList\\\\ChatList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Plus from '../../../assets/icons/plus.svg';\nimport BText from \"../../core/BText/BText\";\nimport MessageCard from \"../MessageCard/MessageCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeConversation } from \"../../../widgets/messaging-overview-widget/model/reducers\";\nimport { getPersonChats } from \"../../../widgets/messaging-overview-widget/model/effects\";\nimport { sessionSelect } from \"../../../redux/core/session/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatList = ({\n  username,\n  conversations\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const jwtToken = useSelector(sessionSelect.jwtToken);\n  const profilePicture = useSelector(sessionSelect.profilePicture);\n  const userId = useSelector(sessionSelect.userId);\n  const fullName = useSelector(sessionSelect.fullName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-list-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(BText, {\n        text: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Plus,\n        className: \"chat-list-header-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BText, {\n      text: \"Messages\",\n      margin: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), conversations.map((conv, index) => /*#__PURE__*/_jsxDEV(MessageCard, {\n      photo: conv.senderId.userId === userId ? conv.receiverId.profilePicture : conv.senderId.profilePicture,\n      fullName: conv.senderId.userId === userId ? conv.receiverId.firstName + ' ' + conv.receiverId.lastName : conv.senderId.firstName + ' ' + conv.senderId.lastName,\n      message: conv.content,\n      date: conv.timestamp,\n      isRead: conv.isRead,\n      onClick: () => {\n        dispatch(changeConversation(conv.senderId.userId === userId ? conv.receiverId : conv.senderId));\n        getPersonChats({\n          userId: userId,\n          jwtToken,\n          dispatch,\n          receiverId: conv.senderId.userId === userId ? conv.receiverId.userId : conv.senderId.userId\n        });\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatList, \"FXWM66kNA8xNd2DNjDi8esgeV5U=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","Plus","BText","MessageCard","useDispatch","useSelector","changeConversation","getPersonChats","sessionSelect","jsxDEV","_jsxDEV","ChatList","username","conversations","_s","dispatch","jwtToken","profilePicture","userId","fullName","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","src","margin","map","conv","index","photo","senderId","receiverId","firstName","lastName","message","content","date","timestamp","isRead","onClick","_c","$RefreshReg$"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/components/messaging/ChatList/ChatList.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Plus from '../../../assets/icons/plus.svg';\r\nimport BText from \"../../core/BText/BText\";\r\nimport {Message} from \"../../../widgets/messaging-overview-widget/model/types\";\r\nimport MessageCard from \"../MessageCard/MessageCard\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeConversation} from \"../../../widgets/messaging-overview-widget/model/reducers\";\r\nimport {getPersonChats, readPersonChat} from \"../../../widgets/messaging-overview-widget/model/effects\";\r\nimport {sessionSelect} from \"../../../redux/core/session/selectors\";\r\n\r\ninterface ChatListProps {\r\n    username: string;\r\n    conversations: Message[];\r\n}\r\n\r\nconst ChatList: React.FC<ChatListProps> = ({username, conversations}) => {\r\n    const dispatch = useDispatch();\r\n    const jwtToken = useSelector(sessionSelect.jwtToken);\r\n    const profilePicture = useSelector(sessionSelect.profilePicture);\r\n    const userId = useSelector(sessionSelect.userId);\r\n    const fullName = useSelector(sessionSelect.fullName);\r\n    return (\r\n        <div className='chat-list-widget'>\r\n            <div className='chat-list-header'>\r\n                <BText text={username}/>\r\n                <img src={Plus} className='chat-list-header-text'/>\r\n            </div>\r\n            <BText text='Messages' margin={20}/>\r\n            {conversations.map((conv, index) =>\r\n                <MessageCard\r\n                    key={index}\r\n                    photo={conv.senderId.userId === userId ? conv.receiverId.profilePicture : conv.senderId.profilePicture}\r\n                    fullName={ conv.senderId.userId === userId\r\n                        ? conv.receiverId.firstName + ' ' + conv.receiverId.lastName\r\n                        : conv.senderId.firstName + ' ' + conv.senderId.lastName}\r\n                    message={conv.content}\r\n                    date={conv.timestamp}\r\n                    isRead={conv.isRead}\r\n                    onClick={() => {\r\n                        dispatch(changeConversation(conv.senderId.userId === userId ? conv.receiverId : conv.senderId));\r\n\r\n                        getPersonChats(\r\n                            {\r\n                                userId: userId,\r\n                                jwtToken,\r\n                                dispatch,\r\n                                receiverId: conv.senderId.userId === userId ? conv.receiverId.userId : conv.senderId.userId})\r\n                    }}/>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}