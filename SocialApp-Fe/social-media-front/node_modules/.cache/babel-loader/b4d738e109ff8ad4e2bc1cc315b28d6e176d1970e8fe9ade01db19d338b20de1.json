{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { defaultProfile } from \"./defaultState\";\nconst profileSlice = createSlice({\n  name: 'profileState',\n  initialState: defaultProfile,\n  reducers: {\n    setCurrentProfile: (state, action) => {\n      state.userId = action.payload;\n    },\n    refreshProfile: (state, action) => {\n      state.profilePicture = action.payload.profilePicture;\n      state.userId = action.payload.userId;\n      state.username = action.payload.username;\n      state.fullName = action.payload.fullName;\n      state.isPrivate = action.payload.isPrivate;\n      state.description = action.payload.bio;\n    },\n    addConnection: (state, action) => {\n      state.connection = action.payload;\n    },\n    addPosts: (state, action) => {\n      state.posts = action.payload;\n    },\n    addRandomPosts: (state, action) => {\n      state.posts = action.payload;\n    },\n    addStreak: (state, action) => {\n      state.followers = action.payload.followers;\n      state.following = action.payload.following;\n    },\n    closeProfile: state => {\n      state.userId = '';\n    }\n  }\n});\nexport const {\n  addPosts,\n  addStreak,\n  addConnection,\n  refreshProfile,\n  setCurrentProfile,\n  closeProfile\n} = profileSlice.actions;\nexport default profileSlice.reducer;","map":{"version":3,"names":["createSlice","defaultProfile","profileSlice","name","initialState","reducers","setCurrentProfile","state","action","userId","payload","refreshProfile","profilePicture","username","fullName","isPrivate","description","bio","addConnection","connection","addPosts","posts","addRandomPosts","addStreak","followers","following","closeProfile","actions","reducer"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/widgets/profile-overview-widget/model/reducers.ts"],"sourcesContent":["import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {defaultProfile} from \"./defaultState\";\r\nimport {ProfileAccount, Streak} from \"./types\";\r\nimport {Post} from \"../../../types/content\";\r\n\r\nconst profileSlice = createSlice({\r\n    name: 'profileState',\r\n    initialState: defaultProfile,\r\n    reducers: {\r\n        setCurrentProfile: (state, action: PayloadAction<string>) => {\r\n            state.userId = action.payload;\r\n        },\r\n        refreshProfile: (state, action: PayloadAction<ProfileAccount>) => {\r\n            state.profilePicture = action.payload.profilePicture;\r\n            state.userId = action.payload.userId;\r\n            state.username = action.payload.username;\r\n            state.fullName = action.payload.fullName;\r\n            state.isPrivate = action.payload.isPrivate;\r\n            state.description = action.payload.bio;\r\n        },\r\n        addConnection: (state, action: PayloadAction<string>) => {\r\n            state.connection = action.payload;\r\n        },\r\n        addPosts: (state, action: PayloadAction<Post[]>) => {\r\n            state.posts = action.payload;\r\n        },\r\n        addRandomPosts: (state, action: PayloadAction<Post[]>) => {\r\n            state.posts = action.payload;\r\n        },\r\n        addStreak: (state, action: PayloadAction<Streak>) =>{\r\n            state.followers = action.payload.followers;\r\n            state.following = action.payload.following;\r\n        },\r\n        closeProfile: (state) => {\r\n            state.userId = '';\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addPosts, addStreak, addConnection, refreshProfile, setCurrentProfile, closeProfile } = profileSlice.actions;\r\nexport default profileSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAsB,kBAAkB;AAC3D,SAAQC,cAAc,QAAO,gBAAgB;AAI7C,MAAMC,YAAY,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAEH,cAAc;EAC5BI,QAAQ,EAAE;IACNC,iBAAiB,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACzDD,KAAK,CAACE,MAAM,GAAGD,MAAM,CAACE,OAAO;IACjC,CAAC;IACDC,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAqC,KAAK;MAC9DD,KAAK,CAACK,cAAc,GAAGJ,MAAM,CAACE,OAAO,CAACE,cAAc;MACpDL,KAAK,CAACE,MAAM,GAAGD,MAAM,CAACE,OAAO,CAACD,MAAM;MACpCF,KAAK,CAACM,QAAQ,GAAGL,MAAM,CAACE,OAAO,CAACG,QAAQ;MACxCN,KAAK,CAACO,QAAQ,GAAGN,MAAM,CAACE,OAAO,CAACI,QAAQ;MACxCP,KAAK,CAACQ,SAAS,GAAGP,MAAM,CAACE,OAAO,CAACK,SAAS;MAC1CR,KAAK,CAACS,WAAW,GAAGR,MAAM,CAACE,OAAO,CAACO,GAAG;IAC1C,CAAC;IACDC,aAAa,EAAEA,CAACX,KAAK,EAAEC,MAA6B,KAAK;MACrDD,KAAK,CAACY,UAAU,GAAGX,MAAM,CAACE,OAAO;IACrC,CAAC;IACDU,QAAQ,EAAEA,CAACb,KAAK,EAAEC,MAA6B,KAAK;MAChDD,KAAK,CAACc,KAAK,GAAGb,MAAM,CAACE,OAAO;IAChC,CAAC;IACDY,cAAc,EAAEA,CAACf,KAAK,EAAEC,MAA6B,KAAK;MACtDD,KAAK,CAACc,KAAK,GAAGb,MAAM,CAACE,OAAO;IAChC,CAAC;IACDa,SAAS,EAAEA,CAAChB,KAAK,EAAEC,MAA6B,KAAI;MAChDD,KAAK,CAACiB,SAAS,GAAGhB,MAAM,CAACE,OAAO,CAACc,SAAS;MAC1CjB,KAAK,CAACkB,SAAS,GAAGjB,MAAM,CAACE,OAAO,CAACe,SAAS;IAC9C,CAAC;IACDC,YAAY,EAAGnB,KAAK,IAAK;MACrBA,KAAK,CAACE,MAAM,GAAG,EAAE;IACrB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEW,QAAQ;EAAEG,SAAS;EAAEL,aAAa;EAAEP,cAAc;EAAEL,iBAAiB;EAAEoB;AAAa,CAAC,GAAGxB,YAAY,CAACyB,OAAO;AAC3H,eAAezB,YAAY,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}