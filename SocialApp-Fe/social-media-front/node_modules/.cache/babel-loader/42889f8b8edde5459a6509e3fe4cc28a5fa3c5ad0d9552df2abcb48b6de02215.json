{"ast":null,"code":"var _jsxFileName = \"D:\\\\an3_facultate\\\\sem1\\\\IS\\\\laboratoare\\\\SocialApp-Fe\\\\social-media-front\\\\src\\\\widgets\\\\post-create-widget\\\\PostCreateWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport Line from \"../../components/core/Line/Line\";\nimport { createPost } from \"./model/effects\";\nimport { sessionSelect } from \"../../redux/core/session/selectors\";\nimport './PostCreateWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCreateWidget = () => {\n  _s();\n  const userId = useSelector(sessionSelect.userId);\n  const [description, setDescription] = useState('');\n  const [file, setFile] = useState(null);\n  const datePosted = new Date().toISOString().split('T')[0];\n  const dispatch = useDispatch();\n  const handleDescriptionChange = event => setDescription(event.target.value);\n  const handleFileChange = event => {\n    setFile(event.target.files ? event.target.files[0] : null);\n  };\n  const uploadFile = async file => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const response = await fetch(\"https://api.uploadthing.com/upload\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": \"Bearer sk_live_031e6fada3707a21afcd57f8ae2d4a7e02f273eff16721784c2c3e52cc522564\",\n        \"X-API-Key\": \"f8s67x9u8k\"\n      },\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to upload file: ${response.status} ${response.statusText}`);\n    }\n    return await response.json();\n  };\n  const handleSubmit = async () => {\n    if (file) {\n      try {\n        const uploadResult = await uploadFile(file);\n        if (uploadResult && uploadResult.url) {\n          await createPost({\n            userId,\n            photo: uploadResult.url,\n            datePosted,\n            description,\n            dispatch\n          });\n        }\n      } catch (error) {\n        console.error('Upload Error:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"widget-main-create\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Description\",\n          type: \"text\",\n          onChange: handleDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(PostCreateWidget, \"WlFRoS+4tHzpx7cMaojvZ63njZ0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = PostCreateWidget;\nexport default PostCreateWidget;\nvar _c;\n$RefreshReg$(_c, \"PostCreateWidget\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Button","Line","createPost","sessionSelect","jsxDEV","_jsxDEV","PostCreateWidget","_s","userId","description","setDescription","file","setFile","datePosted","Date","toISOString","split","dispatch","handleDescriptionChange","event","target","value","handleFileChange","files","uploadFile","formData","FormData","append","response","fetch","method","headers","body","ok","Error","status","statusText","json","handleSubmit","uploadResult","url","photo","error","console","className","children","placeholder","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/widgets/post-create-widget/PostCreateWidget.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Line from \"../../components/core/Line/Line\";\r\nimport { createPost } from \"./model/effects\";\r\nimport { sessionSelect } from \"../../redux/core/session/selectors\";\r\nimport './PostCreateWidget.css';\r\n\r\nconst PostCreateWidget: React.FC = () => {\r\n    const userId = useSelector(sessionSelect.userId);\r\n    const [description, setDescription] = useState<string>('');\r\n    const [file, setFile] = useState<File | null>(null);\r\n\r\n    const datePosted = new Date().toISOString().split('T')[0];\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => setDescription(event.target.value);\r\n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFile(event.target.files ? event.target.files[0] : null);\r\n    };\r\n\r\n    const uploadFile = async (file: File) => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        const response = await fetch(\"https://api.uploadthing.com/upload\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer sk_live_031e6fada3707a21afcd57f8ae2d4a7e02f273eff16721784c2c3e52cc522564\",\r\n                \"X-API-Key\": \"f8s67x9u8k\"\r\n            },\r\n            body: formData\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to upload file: ${response.status} ${response.statusText}`);\r\n        }\r\n\r\n        return await response.json();\r\n    };\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        if (file) {\r\n            try {\r\n                const uploadResult = await uploadFile(file);\r\n                if (uploadResult && uploadResult.url) {\r\n                    await createPost({\r\n                        userId, photo: uploadResult.url, datePosted, description, dispatch\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error('Upload Error:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='widget-main-create'>\r\n            <div>\r\n                <div>\r\n                    <input\r\n                        placeholder=\"Description\"\r\n                        type='text'\r\n                        onChange={handleDescriptionChange}/>\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={handleFileChange}/>\r\n                </div>\r\n                <Button onClick={handleSubmit}>Create Post</Button>\r\n                <Line/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCreateWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}