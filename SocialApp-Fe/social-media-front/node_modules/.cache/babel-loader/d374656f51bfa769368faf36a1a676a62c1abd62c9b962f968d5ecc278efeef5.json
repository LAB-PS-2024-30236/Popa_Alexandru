{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport React, { useRef, useReducer, useEffect, useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { safeParseJSON, resolveMaybeUrlArg, semverLite, UploadThingError, INTERNAL_DO_NOT_USE__fatalClientError, generatePermittedFileTypes, styleFieldToClassName, styleFieldToCssObject, contentFieldToContent, generateMimeTypes, allowedContentTextLabelGenerator } from '@uploadthing/shared';\nimport { genUploader, version } from 'uploadthing/client';\nvar peerDependencies = {\n  next: \"*\",\n  react: \"^17.0.2 || ^18.0.0\",\n  uploadthing: \"^6.5.1\"\n};\n\n// Ripped from https://github.com/scottrippey/react-use-event-hook\nconst noop = () => void 0;\n/**\n * Suppress the warning when using useLayoutEffect with SSR. (https://reactjs.org/link/uselayouteffect-ssr)\n * Make use of useInsertionEffect if available.\n */\nconst useInsertionEffect = typeof window !== \"undefined\" ? React.useInsertionEffect || React.useLayoutEffect : noop;\n/**\n * Similar to useCallback, with a few subtle differences:\n * - The returned function is a stable reference, and will always be the same between renders\n * - No dependency lists required\n * - Properties or state accessed within the callback will always be \"current\"\n */\nfunction useEvent(callback) {\n  // Keep track of the latest callback:\n  const latestRef = React.useRef(\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n  useEvent_shouldNotBeInvokedBeforeMount);\n  useInsertionEffect(() => {\n    latestRef.current = callback;\n  }, [callback]);\n  // Create a stable callback that always calls the latest callback:\n  // using useRef instead of useCallback avoids creating and empty array on every render\n  const stableRef = React.useRef();\n  if (!stableRef.current) {\n    stableRef.current = function () {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return, prefer-rest-params, @typescript-eslint/no-unsafe-argument\n      return latestRef.current.apply(this, arguments);\n    };\n  }\n  return stableRef.current;\n}\n/**\n * Render methods should be pure, especially when concurrency is used,\n * so we will throw this error if the callback is called while rendering.\n */\nfunction useEvent_shouldNotBeInvokedBeforeMount() {\n  throw new Error(\"INVALID_USEEVENT_INVOCATION: the callback from useEvent cannot be invoked before the component has mounted.\");\n}\n\n// Ripped from https://usehooks-ts.com/react-hook/use-fetch\nfunction useFetch(url, options) {\n  const cache = useRef({});\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef(false);\n  const initialState = {\n    error: undefined,\n    data: undefined\n  };\n  // Keep state logic separated\n  const fetchReducer = (state, action) => {\n    switch (action.type) {\n      case \"loading\":\n        return {\n          ...initialState\n        };\n      case \"fetched\":\n        return {\n          ...initialState,\n          data: action.payload\n        };\n      case \"error\":\n        return {\n          ...initialState,\n          error: action.payload\n        };\n      default:\n        return state;\n    }\n  };\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url) return;\n    cancelRequest.current = false;\n    const fetchData = async () => {\n      dispatch({\n        type: \"loading\"\n      });\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({\n          type: \"fetched\",\n          payload: cache.current[url]\n        });\n        return;\n      }\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        const dataOrError = await safeParseJSON(response);\n        if (dataOrError instanceof Error) {\n          throw dataOrError;\n        }\n        cache.current[url] = dataOrError;\n        if (cancelRequest.current) return;\n        dispatch({\n          type: \"fetched\",\n          payload: dataOrError\n        });\n      } catch (error) {\n        if (cancelRequest.current) return;\n        dispatch({\n          type: \"error\",\n          payload: error\n        });\n      }\n    };\n    void fetchData();\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n  return state;\n}\nconst useEndpointMetadata = (url, endpoint) => {\n  const maybeServerData = globalThis.__UPLOADTHING;\n  const {\n    data\n  } = useFetch(\n  // Don't fetch if we already have the data\n  maybeServerData ? undefined : url.href);\n  return (maybeServerData ?? data)?.find(x => x.slug === endpoint);\n};\nconst INTERNAL_uploadthingHookGen = initOpts => {\n  if (!semverLite(peerDependencies.uploadthing, version)) {\n    console.error(`!!!WARNING::: @uploadthing/react requires \"uploadthing@${peerDependencies.uploadthing}\", but version \"${version}\" is installed`);\n  }\n  const uploadFiles = genUploader({\n    url: initOpts.url,\n    package: \"@uploadthing/react\"\n  });\n  const useUploadThing = (endpoint, opts) => {\n    const [isUploading, setUploading] = useState(false);\n    const uploadProgress = useRef(0);\n    const fileProgress = useRef(new Map());\n    const permittedFileInfo = useEndpointMetadata(initOpts.url, endpoint);\n    const startUpload = useEvent(async (...args) => {\n      const files = (await opts?.onBeforeUploadBegin?.(args[0])) ?? args[0];\n      const input = args[1];\n      setUploading(true);\n      opts?.onUploadProgress?.(0);\n      try {\n        const res = await uploadFiles(endpoint, {\n          headers: opts?.headers,\n          files,\n          skipPolling: opts?.skipPolling,\n          onUploadProgress: progress => {\n            if (!opts?.onUploadProgress) return;\n            fileProgress.current.set(progress.file, progress.progress);\n            let sum = 0;\n            fileProgress.current.forEach(p => {\n              sum += p;\n            });\n            const averageProgress = Math.floor(sum / fileProgress.current.size / 10) * 10;\n            if (averageProgress !== uploadProgress.current) {\n              opts?.onUploadProgress?.(averageProgress);\n              uploadProgress.current = averageProgress;\n            }\n          },\n          onUploadBegin({\n            file\n          }) {\n            if (!opts?.onUploadBegin) return;\n            opts.onUploadBegin(file);\n          },\n          // @ts-expect-error - input may not be defined on the type\n          input\n        });\n        opts?.onClientUploadComplete?.(res);\n        return res;\n      } catch (e) {\n        let error;\n        if (e instanceof UploadThingError) {\n          error = e;\n        } else {\n          error = INTERNAL_DO_NOT_USE__fatalClientError(e);\n          console.error(\"Something went wrong. Please contact UploadThing and provide the following cause:\", error.cause instanceof Error ? error.cause.toString() : error.cause);\n        }\n        opts?.onUploadError?.(error);\n      } finally {\n        setUploading(false);\n        fileProgress.current = new Map();\n        uploadProgress.current = 0;\n      }\n    });\n    return {\n      startUpload,\n      isUploading,\n      permittedFileInfo\n    };\n  };\n  return useUploadThing;\n};\nconst generateReactHelpers = initOpts => {\n  const url = resolveMaybeUrlArg(initOpts?.url);\n  return {\n    useUploadThing: INTERNAL_uploadthingHookGen({\n      url\n    }),\n    uploadFiles: genUploader({\n      url,\n      package: \"@uploadthing/react\"\n    })\n  };\n};\nfunction getFilesFromClipboardEvent(event) {\n  const dataTransferItems = event.clipboardData?.items;\n  if (!dataTransferItems) return;\n  const files = Array.from(dataTransferItems).reduce((acc, curr) => {\n    const f = curr.getAsFile();\n    return f ? [...acc, f] : acc;\n  }, []);\n  return files;\n}\nfunction Spinner() {\n  return /*#__PURE__*/jsx(\"svg\", {\n    className: \"z-10 block h-5 w-5 animate-spin align-middle text-white\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 576 512\",\n    children: /*#__PURE__*/jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M256 32C256 14.33 270.3 0 288 0C429.4 0 544 114.6 544 256C544 302.6 531.5 346.4 509.7 384C500.9 399.3 481.3 404.6 465.1 395.7C450.7 386.9 445.5 367.3 454.3 351.1C470.6 323.8 480 291 480 255.1C480 149.1 394 63.1 288 63.1C270.3 63.1 256 49.67 256 31.1V32z\"\n    })\n  });\n}\nconst progressWidths = {\n  0: \"after:w-0\",\n  10: \"after:w-[10%]\",\n  20: \"after:w-[20%]\",\n  30: \"after:w-[30%]\",\n  40: \"after:w-[40%]\",\n  50: \"after:w-[50%]\",\n  60: \"after:w-[60%]\",\n  70: \"after:w-[70%]\",\n  80: \"after:w-[80%]\",\n  90: \"after:w-[90%]\",\n  100: \"after:w-[100%]\"\n};\n\n/**\n * @example\n * <UploadButton<OurFileRouter>\n *   endpoint=\"someEndpoint\"\n *   onUploadComplete={(res) => console.log(res)}\n *   onUploadError={(err) => console.log(err)}\n * />\n */\nfunction UploadButton(props) {\n  // Cast back to UploadthingComponentProps<TRouter> to get the correct type\n  // since the ErrorMessage messes it up otherwise\n  const $props = props;\n  const {\n    mode = \"auto\",\n    appendOnPaste = false\n  } = $props.config ?? {};\n  const useUploadThing = INTERNAL_uploadthingHookGen({\n    url: resolveMaybeUrlArg($props.url)\n  });\n  const fileInputRef = useRef(null);\n  const labelRef = useRef(null);\n  const [uploadProgressState, setUploadProgress] = useState($props.__internal_upload_progress ?? 0);\n  const [files, setFiles] = useState([]);\n  const [isManualTriggerDisplayed, setIsManualTriggerDisplayed] = useState(false);\n  const uploadProgress = $props.__internal_upload_progress ?? uploadProgressState;\n  const {\n    startUpload,\n    isUploading,\n    permittedFileInfo\n  } = useUploadThing($props.endpoint, {\n    headers: $props.headers,\n    skipPolling: !$props?.onClientUploadComplete ? true : $props?.skipPolling,\n    onClientUploadComplete: res => {\n      if (fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n      setIsManualTriggerDisplayed(false);\n      setFiles([]);\n      $props.onClientUploadComplete?.(res);\n      setUploadProgress(0);\n    },\n    onUploadProgress: p => {\n      setUploadProgress(p);\n      $props.onUploadProgress?.(p);\n    },\n    onUploadError: $props.onUploadError,\n    onUploadBegin: $props.onUploadBegin,\n    onBeforeUploadBegin: $props.onBeforeUploadBegin\n  });\n  const {\n    fileTypes,\n    multiple\n  } = generatePermittedFileTypes(permittedFileInfo?.config);\n  const ready = $props.__internal_ready ?? ($props.__internal_state === \"ready\" || fileTypes.length > 0);\n  useEffect(() => {\n    const handlePaste = event => {\n      if (!appendOnPaste) return;\n      if (document.activeElement !== labelRef.current) return;\n      const pastedFiles = getFilesFromClipboardEvent(event);\n      if (!pastedFiles) return;\n      setFiles(prev => [...prev, ...pastedFiles]);\n      if (mode === \"auto\") {\n        const input = \"input\" in $props ? $props.input : undefined;\n        void startUpload(files, input);\n      }\n    };\n    window.addEventListener(\"paste\", handlePaste);\n    return () => {\n      window.removeEventListener(\"paste\", handlePaste);\n    };\n  }, [startUpload, appendOnPaste, $props, files, mode, fileTypes]);\n  const getUploadButtonText = fileTypes => {\n    if (isManualTriggerDisplayed) return `Upload ${files.length} file${files.length === 1 ? \"\" : \"s\"}`;\n    if (fileTypes.length === 0) return \"Loading...\";\n    return `Choose File${multiple ? `(s)` : ``}`;\n  };\n  const getUploadButtonContents = fileTypes => {\n    if (state !== \"uploading\") {\n      return getUploadButtonText(fileTypes);\n    }\n    if (uploadProgress === 100) {\n      return /*#__PURE__*/jsx(Spinner, {});\n    }\n    return /*#__PURE__*/jsxs(\"span\", {\n      className: \"z-50\",\n      children: [uploadProgress, \"%\"]\n    });\n  };\n  const getInputProps = () => ({\n    type: \"file\",\n    ref: fileInputRef,\n    multiple,\n    accept: generateMimeTypes(fileTypes ?? [])?.join(\", \"),\n    onChange: e => {\n      if (!e.target.files) return;\n      const selectedFiles = Array.from(e.target.files);\n      if (mode === \"manual\") {\n        setFiles(selectedFiles);\n        setIsManualTriggerDisplayed(true);\n        return;\n      }\n      const input = \"input\" in $props ? $props.input : undefined;\n      void startUpload(selectedFiles, input);\n    },\n    disabled: $props.__internal_button_disabled ?? !ready,\n    ...(!($props.__internal_button_disabled ?? !ready) ? {\n      tabIndex: 0\n    } : {})\n  });\n  const styleFieldArg = {\n    ready: ready,\n    isUploading: $props.__internal_state === \"uploading\" || isUploading,\n    uploadProgress,\n    fileTypes\n  };\n  const state = (() => {\n    if ($props.__internal_state) return $props.__internal_state;\n    if (!ready) return \"readying\";\n    if (ready && !isUploading) return \"ready\";\n    return \"uploading\";\n  })();\n  const renderClearButton = () => /*#__PURE__*/jsx(\"button\", {\n    onClick: () => {\n      setFiles([]);\n      setIsManualTriggerDisplayed(false);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n    },\n    className: twMerge(\"h-[1.25rem] cursor-pointer rounded border-none bg-transparent text-gray-500 transition-colors hover:bg-slate-200 hover:text-gray-600\", styleFieldToClassName($props.appearance?.clearBtn, styleFieldArg)),\n    style: styleFieldToCssObject($props.appearance?.clearBtn, styleFieldArg),\n    \"data-state\": state,\n    \"data-ut-element\": \"clear-btn\",\n    children: contentFieldToContent($props.content?.clearBtn, styleFieldArg) ?? \"Clear\"\n  });\n  const renderAllowedContent = () => /*#__PURE__*/jsx(\"div\", {\n    className: twMerge(\"h-[1.25rem]  text-xs leading-5 text-gray-600\", styleFieldToClassName($props.appearance?.allowedContent, styleFieldArg)),\n    style: styleFieldToCssObject($props.appearance?.allowedContent, styleFieldArg),\n    \"data-state\": state,\n    \"data-ut-element\": \"allowed-content\",\n    children: contentFieldToContent($props.content?.allowedContent, styleFieldArg) ?? allowedContentTextLabelGenerator(permittedFileInfo?.config)\n  });\n  return /*#__PURE__*/jsxs(\"div\", {\n    className: twMerge(\"flex flex-col items-center justify-center gap-1\", $props.className, styleFieldToClassName($props.appearance?.container, styleFieldArg)),\n    style: styleFieldToCssObject($props.appearance?.container, styleFieldArg),\n    \"data-state\": state,\n    children: [/*#__PURE__*/jsxs(\"label\", {\n      className: twMerge(\"relative flex h-10 w-36 cursor-pointer items-center justify-center overflow-hidden rounded-md text-white after:transition-[width] after:duration-500 focus-within:ring-2 focus-within:ring-blue-600 focus-within:ring-offset-2\", state === \"readying\" && \"cursor-not-allowed bg-blue-400\", state === \"uploading\" && `bg-blue-400 after:absolute after:left-0 after:h-full after:bg-blue-600 after:content-[''] ${progressWidths[uploadProgress]}`, state === \"ready\" && \"bg-blue-600\", styleFieldToClassName($props.appearance?.button, styleFieldArg)),\n      style: styleFieldToCssObject($props.appearance?.button, styleFieldArg),\n      \"data-state\": state,\n      \"data-ut-element\": \"button\",\n      ref: labelRef,\n      onClick: e => {\n        if (isManualTriggerDisplayed) {\n          e.preventDefault();\n          e.stopPropagation();\n          const input = \"input\" in $props ? $props.input : undefined;\n          void startUpload(files, input);\n        }\n      },\n      children: [/*#__PURE__*/jsx(\"input\", {\n        ...getInputProps(),\n        className: \"sr-only\"\n      }), contentFieldToContent($props.content?.button, styleFieldArg) ?? getUploadButtonContents(fileTypes)]\n    }), mode === \"manual\" && files.length > 0 ? renderClearButton() : renderAllowedContent()]\n  });\n}\nexport { INTERNAL_uploadthingHookGen as I, Spinner as S, UploadButton as U, generateReactHelpers as a, getFilesFromClipboardEvent as g, progressWidths as p };","map":{"version":3,"names":["jsx","jsxs","React","useRef","useReducer","useEffect","useState","twMerge","safeParseJSON","resolveMaybeUrlArg","semverLite","UploadThingError","INTERNAL_DO_NOT_USE__fatalClientError","generatePermittedFileTypes","styleFieldToClassName","styleFieldToCssObject","contentFieldToContent","generateMimeTypes","allowedContentTextLabelGenerator","genUploader","version","peerDependencies","next","react","uploadthing","noop","useInsertionEffect","window","useLayoutEffect","useEvent","callback","latestRef","useEvent_shouldNotBeInvokedBeforeMount","current","stableRef","apply","arguments","Error","useFetch","url","options","cache","cancelRequest","initialState","error","undefined","data","fetchReducer","state","action","type","payload","dispatch","fetchData","response","fetch","ok","statusText","dataOrError","useEndpointMetadata","endpoint","maybeServerData","globalThis","__UPLOADTHING","href","find","x","slug","INTERNAL_uploadthingHookGen","initOpts","console","uploadFiles","package","useUploadThing","opts","isUploading","setUploading","uploadProgress","fileProgress","Map","permittedFileInfo","startUpload","args","files","onBeforeUploadBegin","input","onUploadProgress","res","headers","skipPolling","progress","set","file","sum","forEach","p","averageProgress","Math","floor","size","onUploadBegin","onClientUploadComplete","e","cause","toString","onUploadError","generateReactHelpers","getFilesFromClipboardEvent","event","dataTransferItems","clipboardData","items","Array","from","reduce","acc","curr","f","getAsFile","Spinner","className","xmlns","fill","viewBox","children","d","progressWidths","UploadButton","props","$props","mode","appendOnPaste","config","fileInputRef","labelRef","uploadProgressState","setUploadProgress","__internal_upload_progress","setFiles","isManualTriggerDisplayed","setIsManualTriggerDisplayed","value","fileTypes","multiple","ready","__internal_ready","__internal_state","length","handlePaste","document","activeElement","pastedFiles","prev","addEventListener","removeEventListener","getUploadButtonText","getUploadButtonContents","getInputProps","ref","accept","join","onChange","target","selectedFiles","disabled","__internal_button_disabled","tabIndex","styleFieldArg","renderClearButton","onClick","appearance","clearBtn","style","content","renderAllowedContent","allowedContent","container","button","preventDefault","stopPropagation","I","S","U","a","g"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/node_modules/@uploadthing/react/dist/button-client-Ry3i9W70.js"],"sourcesContent":["'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport React, { useRef, useReducer, useEffect, useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { safeParseJSON, resolveMaybeUrlArg, semverLite, UploadThingError, INTERNAL_DO_NOT_USE__fatalClientError, generatePermittedFileTypes, styleFieldToClassName, styleFieldToCssObject, contentFieldToContent, generateMimeTypes, allowedContentTextLabelGenerator } from '@uploadthing/shared';\nimport { genUploader, version } from 'uploadthing/client';\n\nvar peerDependencies = {\n\tnext: \"*\",\n\treact: \"^17.0.2 || ^18.0.0\",\n\tuploadthing: \"^6.5.1\"\n};\n\n// Ripped from https://github.com/scottrippey/react-use-event-hook\nconst noop = ()=>void 0;\n/**\n * Suppress the warning when using useLayoutEffect with SSR. (https://reactjs.org/link/uselayouteffect-ssr)\n * Make use of useInsertionEffect if available.\n */ const useInsertionEffect = typeof window !== \"undefined\" ? React.useInsertionEffect || React.useLayoutEffect : noop;\n/**\n * Similar to useCallback, with a few subtle differences:\n * - The returned function is a stable reference, and will always be the same between renders\n * - No dependency lists required\n * - Properties or state accessed within the callback will always be \"current\"\n */ function useEvent(callback) {\n    // Keep track of the latest callback:\n    const latestRef = React.useRef(// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    useEvent_shouldNotBeInvokedBeforeMount);\n    useInsertionEffect(()=>{\n        latestRef.current = callback;\n    }, [\n        callback\n    ]);\n    // Create a stable callback that always calls the latest callback:\n    // using useRef instead of useCallback avoids creating and empty array on every render\n    const stableRef = React.useRef();\n    if (!stableRef.current) {\n        stableRef.current = function() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return, prefer-rest-params, @typescript-eslint/no-unsafe-argument\n            return latestRef.current.apply(this, arguments);\n        };\n    }\n    return stableRef.current;\n}\n/**\n * Render methods should be pure, especially when concurrency is used,\n * so we will throw this error if the callback is called while rendering.\n */ function useEvent_shouldNotBeInvokedBeforeMount() {\n    throw new Error(\"INVALID_USEEVENT_INVOCATION: the callback from useEvent cannot be invoked before the component has mounted.\");\n}\n\n// Ripped from https://usehooks-ts.com/react-hook/use-fetch\nfunction useFetch(url, options) {\n    const cache = useRef({});\n    // Used to prevent state update if the component is unmounted\n    const cancelRequest = useRef(false);\n    const initialState = {\n        error: undefined,\n        data: undefined\n    };\n    // Keep state logic separated\n    const fetchReducer = (state, action)=>{\n        switch(action.type){\n            case \"loading\":\n                return {\n                    ...initialState\n                };\n            case \"fetched\":\n                return {\n                    ...initialState,\n                    data: action.payload\n                };\n            case \"error\":\n                return {\n                    ...initialState,\n                    error: action.payload\n                };\n            default:\n                return state;\n        }\n    };\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\n    useEffect(()=>{\n        // Do nothing if the url is not given\n        if (!url) return;\n        cancelRequest.current = false;\n        const fetchData = async ()=>{\n            dispatch({\n                type: \"loading\"\n            });\n            // If a cache exists for this url, return it\n            if (cache.current[url]) {\n                dispatch({\n                    type: \"fetched\",\n                    payload: cache.current[url]\n                });\n                return;\n            }\n            try {\n                const response = await fetch(url, options);\n                if (!response.ok) {\n                    throw new Error(response.statusText);\n                }\n                const dataOrError = await safeParseJSON(response);\n                if (dataOrError instanceof Error) {\n                    throw dataOrError;\n                }\n                cache.current[url] = dataOrError;\n                if (cancelRequest.current) return;\n                dispatch({\n                    type: \"fetched\",\n                    payload: dataOrError\n                });\n            } catch (error) {\n                if (cancelRequest.current) return;\n                dispatch({\n                    type: \"error\",\n                    payload: error\n                });\n            }\n        };\n        void fetchData();\n        // Use the cleanup function for avoiding a possibly...\n        // ...state update after the component was unmounted\n        return ()=>{\n            cancelRequest.current = true;\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        url\n    ]);\n    return state;\n}\n\nconst useEndpointMetadata = (url, endpoint)=>{\n    const maybeServerData = globalThis.__UPLOADTHING;\n    const { data } = useFetch(// Don't fetch if we already have the data\n    maybeServerData ? undefined : url.href);\n    return (maybeServerData ?? data)?.find((x)=>x.slug === endpoint);\n};\nconst INTERNAL_uploadthingHookGen = (initOpts)=>{\n    if (!semverLite(peerDependencies.uploadthing, version)) {\n        console.error(`!!!WARNING::: @uploadthing/react requires \"uploadthing@${peerDependencies.uploadthing}\", but version \"${version}\" is installed`);\n    }\n    const uploadFiles = genUploader({\n        url: initOpts.url,\n        package: \"@uploadthing/react\"\n    });\n    const useUploadThing = (endpoint, opts)=>{\n        const [isUploading, setUploading] = useState(false);\n        const uploadProgress = useRef(0);\n        const fileProgress = useRef(new Map());\n        const permittedFileInfo = useEndpointMetadata(initOpts.url, endpoint);\n        const startUpload = useEvent(async (...args)=>{\n            const files = await opts?.onBeforeUploadBegin?.(args[0]) ?? args[0];\n            const input = args[1];\n            setUploading(true);\n            opts?.onUploadProgress?.(0);\n            try {\n                const res = await uploadFiles(endpoint, {\n                    headers: opts?.headers,\n                    files,\n                    skipPolling: opts?.skipPolling,\n                    onUploadProgress: (progress)=>{\n                        if (!opts?.onUploadProgress) return;\n                        fileProgress.current.set(progress.file, progress.progress);\n                        let sum = 0;\n                        fileProgress.current.forEach((p)=>{\n                            sum += p;\n                        });\n                        const averageProgress = Math.floor(sum / fileProgress.current.size / 10) * 10;\n                        if (averageProgress !== uploadProgress.current) {\n                            opts?.onUploadProgress?.(averageProgress);\n                            uploadProgress.current = averageProgress;\n                        }\n                    },\n                    onUploadBegin ({ file }) {\n                        if (!opts?.onUploadBegin) return;\n                        opts.onUploadBegin(file);\n                    },\n                    // @ts-expect-error - input may not be defined on the type\n                    input\n                });\n                opts?.onClientUploadComplete?.(res);\n                return res;\n            } catch (e) {\n                let error;\n                if (e instanceof UploadThingError) {\n                    error = e;\n                } else {\n                    error = INTERNAL_DO_NOT_USE__fatalClientError(e);\n                    console.error(\"Something went wrong. Please contact UploadThing and provide the following cause:\", error.cause instanceof Error ? error.cause.toString() : error.cause);\n                }\n                opts?.onUploadError?.(error);\n            } finally{\n                setUploading(false);\n                fileProgress.current = new Map();\n                uploadProgress.current = 0;\n            }\n        });\n        return {\n            startUpload,\n            isUploading,\n            permittedFileInfo\n        };\n    };\n    return useUploadThing;\n};\nconst generateReactHelpers = (initOpts)=>{\n    const url = resolveMaybeUrlArg(initOpts?.url);\n    return {\n        useUploadThing: INTERNAL_uploadthingHookGen({\n            url\n        }),\n        uploadFiles: genUploader({\n            url,\n            package: \"@uploadthing/react\"\n        })\n    };\n};\n\nfunction getFilesFromClipboardEvent(event) {\n    const dataTransferItems = event.clipboardData?.items;\n    if (!dataTransferItems) return;\n    const files = Array.from(dataTransferItems).reduce((acc, curr)=>{\n        const f = curr.getAsFile();\n        return f ? [\n            ...acc,\n            f\n        ] : acc;\n    }, []);\n    return files;\n}\nfunction Spinner() {\n    return /*#__PURE__*/ jsx(\"svg\", {\n        className: \"z-10 block h-5 w-5 animate-spin align-middle text-white\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 576 512\",\n        children: /*#__PURE__*/ jsx(\"path\", {\n            fill: \"currentColor\",\n            d: \"M256 32C256 14.33 270.3 0 288 0C429.4 0 544 114.6 544 256C544 302.6 531.5 346.4 509.7 384C500.9 399.3 481.3 404.6 465.1 395.7C450.7 386.9 445.5 367.3 454.3 351.1C470.6 323.8 480 291 480 255.1C480 149.1 394 63.1 288 63.1C270.3 63.1 256 49.67 256 31.1V32z\"\n        })\n    });\n}\nconst progressWidths = {\n    0: \"after:w-0\",\n    10: \"after:w-[10%]\",\n    20: \"after:w-[20%]\",\n    30: \"after:w-[30%]\",\n    40: \"after:w-[40%]\",\n    50: \"after:w-[50%]\",\n    60: \"after:w-[60%]\",\n    70: \"after:w-[70%]\",\n    80: \"after:w-[80%]\",\n    90: \"after:w-[90%]\",\n    100: \"after:w-[100%]\"\n};\n\n/**\n * @example\n * <UploadButton<OurFileRouter>\n *   endpoint=\"someEndpoint\"\n *   onUploadComplete={(res) => console.log(res)}\n *   onUploadError={(err) => console.log(err)}\n * />\n */ function UploadButton(props) {\n    // Cast back to UploadthingComponentProps<TRouter> to get the correct type\n    // since the ErrorMessage messes it up otherwise\n    const $props = props;\n    const { mode = \"auto\", appendOnPaste = false } = $props.config ?? {};\n    const useUploadThing = INTERNAL_uploadthingHookGen({\n        url: resolveMaybeUrlArg($props.url)\n    });\n    const fileInputRef = useRef(null);\n    const labelRef = useRef(null);\n    const [uploadProgressState, setUploadProgress] = useState($props.__internal_upload_progress ?? 0);\n    const [files, setFiles] = useState([]);\n    const [isManualTriggerDisplayed, setIsManualTriggerDisplayed] = useState(false);\n    const uploadProgress = $props.__internal_upload_progress ?? uploadProgressState;\n    const { startUpload, isUploading, permittedFileInfo } = useUploadThing($props.endpoint, {\n        headers: $props.headers,\n        skipPolling: !$props?.onClientUploadComplete ? true : $props?.skipPolling,\n        onClientUploadComplete: (res)=>{\n            if (fileInputRef.current) {\n                fileInputRef.current.value = \"\";\n            }\n            setIsManualTriggerDisplayed(false);\n            setFiles([]);\n            $props.onClientUploadComplete?.(res);\n            setUploadProgress(0);\n        },\n        onUploadProgress: (p)=>{\n            setUploadProgress(p);\n            $props.onUploadProgress?.(p);\n        },\n        onUploadError: $props.onUploadError,\n        onUploadBegin: $props.onUploadBegin,\n        onBeforeUploadBegin: $props.onBeforeUploadBegin\n    });\n    const { fileTypes, multiple } = generatePermittedFileTypes(permittedFileInfo?.config);\n    const ready = $props.__internal_ready ?? ($props.__internal_state === \"ready\" || fileTypes.length > 0);\n    useEffect(()=>{\n        const handlePaste = (event)=>{\n            if (!appendOnPaste) return;\n            if (document.activeElement !== labelRef.current) return;\n            const pastedFiles = getFilesFromClipboardEvent(event);\n            if (!pastedFiles) return;\n            setFiles((prev)=>[\n                    ...prev,\n                    ...pastedFiles\n                ]);\n            if (mode === \"auto\") {\n                const input = \"input\" in $props ? $props.input : undefined;\n                void startUpload(files, input);\n            }\n        };\n        window.addEventListener(\"paste\", handlePaste);\n        return ()=>{\n            window.removeEventListener(\"paste\", handlePaste);\n        };\n    }, [\n        startUpload,\n        appendOnPaste,\n        $props,\n        files,\n        mode,\n        fileTypes\n    ]);\n    const getUploadButtonText = (fileTypes)=>{\n        if (isManualTriggerDisplayed) return `Upload ${files.length} file${files.length === 1 ? \"\" : \"s\"}`;\n        if (fileTypes.length === 0) return \"Loading...\";\n        return `Choose File${multiple ? `(s)` : ``}`;\n    };\n    const getUploadButtonContents = (fileTypes)=>{\n        if (state !== \"uploading\") {\n            return getUploadButtonText(fileTypes);\n        }\n        if (uploadProgress === 100) {\n            return /*#__PURE__*/ jsx(Spinner, {});\n        }\n        return /*#__PURE__*/ jsxs(\"span\", {\n            className: \"z-50\",\n            children: [\n                uploadProgress,\n                \"%\"\n            ]\n        });\n    };\n    const getInputProps = ()=>({\n            type: \"file\",\n            ref: fileInputRef,\n            multiple,\n            accept: generateMimeTypes(fileTypes ?? [])?.join(\", \"),\n            onChange: (e)=>{\n                if (!e.target.files) return;\n                const selectedFiles = Array.from(e.target.files);\n                if (mode === \"manual\") {\n                    setFiles(selectedFiles);\n                    setIsManualTriggerDisplayed(true);\n                    return;\n                }\n                const input = \"input\" in $props ? $props.input : undefined;\n                void startUpload(selectedFiles, input);\n            },\n            disabled: $props.__internal_button_disabled ?? !ready,\n            ...!($props.__internal_button_disabled ?? !ready) ? {\n                tabIndex: 0\n            } : {}\n        });\n    const styleFieldArg = {\n        ready: ready,\n        isUploading: $props.__internal_state === \"uploading\" || isUploading,\n        uploadProgress,\n        fileTypes\n    };\n    const state = (()=>{\n        if ($props.__internal_state) return $props.__internal_state;\n        if (!ready) return \"readying\";\n        if (ready && !isUploading) return \"ready\";\n        return \"uploading\";\n    })();\n    const renderClearButton = ()=>/*#__PURE__*/ jsx(\"button\", {\n            onClick: ()=>{\n                setFiles([]);\n                setIsManualTriggerDisplayed(false);\n                if (fileInputRef.current) {\n                    fileInputRef.current.value = \"\";\n                }\n            },\n            className: twMerge(\"h-[1.25rem] cursor-pointer rounded border-none bg-transparent text-gray-500 transition-colors hover:bg-slate-200 hover:text-gray-600\", styleFieldToClassName($props.appearance?.clearBtn, styleFieldArg)),\n            style: styleFieldToCssObject($props.appearance?.clearBtn, styleFieldArg),\n            \"data-state\": state,\n            \"data-ut-element\": \"clear-btn\",\n            children: contentFieldToContent($props.content?.clearBtn, styleFieldArg) ?? \"Clear\"\n        });\n    const renderAllowedContent = ()=>/*#__PURE__*/ jsx(\"div\", {\n            className: twMerge(\"h-[1.25rem]  text-xs leading-5 text-gray-600\", styleFieldToClassName($props.appearance?.allowedContent, styleFieldArg)),\n            style: styleFieldToCssObject($props.appearance?.allowedContent, styleFieldArg),\n            \"data-state\": state,\n            \"data-ut-element\": \"allowed-content\",\n            children: contentFieldToContent($props.content?.allowedContent, styleFieldArg) ?? allowedContentTextLabelGenerator(permittedFileInfo?.config)\n        });\n    return /*#__PURE__*/ jsxs(\"div\", {\n        className: twMerge(\"flex flex-col items-center justify-center gap-1\", $props.className, styleFieldToClassName($props.appearance?.container, styleFieldArg)),\n        style: styleFieldToCssObject($props.appearance?.container, styleFieldArg),\n        \"data-state\": state,\n        children: [\n            /*#__PURE__*/ jsxs(\"label\", {\n                className: twMerge(\"relative flex h-10 w-36 cursor-pointer items-center justify-center overflow-hidden rounded-md text-white after:transition-[width] after:duration-500 focus-within:ring-2 focus-within:ring-blue-600 focus-within:ring-offset-2\", state === \"readying\" && \"cursor-not-allowed bg-blue-400\", state === \"uploading\" && `bg-blue-400 after:absolute after:left-0 after:h-full after:bg-blue-600 after:content-[''] ${progressWidths[uploadProgress]}`, state === \"ready\" && \"bg-blue-600\", styleFieldToClassName($props.appearance?.button, styleFieldArg)),\n                style: styleFieldToCssObject($props.appearance?.button, styleFieldArg),\n                \"data-state\": state,\n                \"data-ut-element\": \"button\",\n                ref: labelRef,\n                onClick: (e)=>{\n                    if (isManualTriggerDisplayed) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        const input = \"input\" in $props ? $props.input : undefined;\n                        void startUpload(files, input);\n                    }\n                },\n                children: [\n                    /*#__PURE__*/ jsx(\"input\", {\n                        ...getInputProps(),\n                        className: \"sr-only\"\n                    }),\n                    contentFieldToContent($props.content?.button, styleFieldArg) ?? getUploadButtonContents(fileTypes)\n                ]\n            }),\n            mode === \"manual\" && files.length > 0 ? renderClearButton() : renderAllowedContent()\n        ]\n    });\n}\n\nexport { INTERNAL_uploadthingHookGen as I, Spinner as S, UploadButton as U, generateReactHelpers as a, getFilesFromClipboardEvent as g, progressWidths as p };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,EAAEC,IAAI,QAAQ,mBAAmB;AAC7C,OAAOC,KAAK,IAAIC,MAAM,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,aAAa,EAAEC,kBAAkB,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,qCAAqC,EAAEC,0BAA0B,EAAEC,qBAAqB,EAAEC,qBAAqB,EAAEC,qBAAqB,EAAEC,iBAAiB,EAAEC,gCAAgC,QAAQ,qBAAqB;AAClS,SAASC,WAAW,EAAEC,OAAO,QAAQ,oBAAoB;AAEzD,IAAIC,gBAAgB,GAAG;EACtBC,IAAI,EAAE,GAAG;EACTC,KAAK,EAAE,oBAAoB;EAC3BC,WAAW,EAAE;AACd,CAAC;;AAED;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAI,KAAK,CAAC;AACvB;AACA;AACA;AACA;AAAI,MAAMC,kBAAkB,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAGzB,KAAK,CAACwB,kBAAkB,IAAIxB,KAAK,CAAC0B,eAAe,GAAGH,IAAI;AACvH;AACA;AACA;AACA;AACA;AACA;AAAI,SAASI,QAAQA,CAACC,QAAQ,EAAE;EAC5B;EACA,MAAMC,SAAS,GAAG7B,KAAK,CAACC,MAAM;EAAC;EAC/B6B,sCAAsC,CAAC;EACvCN,kBAAkB,CAAC,MAAI;IACnBK,SAAS,CAACE,OAAO,GAAGH,QAAQ;EAChC,CAAC,EAAE,CACCA,QAAQ,CACX,CAAC;EACF;EACA;EACA,MAAMI,SAAS,GAAGhC,KAAK,CAACC,MAAM,CAAC,CAAC;EAChC,IAAI,CAAC+B,SAAS,CAACD,OAAO,EAAE;IACpBC,SAAS,CAACD,OAAO,GAAG,YAAW;MAC3B;MACA,OAAOF,SAAS,CAACE,OAAO,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACnD,CAAC;EACL;EACA,OAAOF,SAAS,CAACD,OAAO;AAC5B;AACA;AACA;AACA;AACA;AAAI,SAASD,sCAAsCA,CAAA,EAAG;EAClD,MAAM,IAAIK,KAAK,CAAC,6GAA6G,CAAC;AAClI;;AAEA;AACA,SAASC,QAAQA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC5B,MAAMC,KAAK,GAAGtC,MAAM,CAAC,CAAC,CAAC,CAAC;EACxB;EACA,MAAMuC,aAAa,GAAGvC,MAAM,CAAC,KAAK,CAAC;EACnC,MAAMwC,YAAY,GAAG;IACjBC,KAAK,EAAEC,SAAS;IAChBC,IAAI,EAAED;EACV,CAAC;EACD;EACA,MAAME,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAG;IAClC,QAAOA,MAAM,CAACC,IAAI;MACd,KAAK,SAAS;QACV,OAAO;UACH,GAAGP;QACP,CAAC;MACL,KAAK,SAAS;QACV,OAAO;UACH,GAAGA,YAAY;UACfG,IAAI,EAAEG,MAAM,CAACE;QACjB,CAAC;MACL,KAAK,OAAO;QACR,OAAO;UACH,GAAGR,YAAY;UACfC,KAAK,EAAEK,MAAM,CAACE;QAClB,CAAC;MACL;QACI,OAAOH,KAAK;IACpB;EACJ,CAAC;EACD,MAAM,CAACA,KAAK,EAAEI,QAAQ,CAAC,GAAGhD,UAAU,CAAC2C,YAAY,EAAEJ,YAAY,CAAC;EAChEtC,SAAS,CAAC,MAAI;IACV;IACA,IAAI,CAACkC,GAAG,EAAE;IACVG,aAAa,CAACT,OAAO,GAAG,KAAK;IAC7B,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAU;MACxBD,QAAQ,CAAC;QACLF,IAAI,EAAE;MACV,CAAC,CAAC;MACF;MACA,IAAIT,KAAK,CAACR,OAAO,CAACM,GAAG,CAAC,EAAE;QACpBa,QAAQ,CAAC;UACLF,IAAI,EAAE,SAAS;UACfC,OAAO,EAAEV,KAAK,CAACR,OAAO,CAACM,GAAG;QAC9B,CAAC,CAAC;QACF;MACJ;MACA,IAAI;QACA,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAChB,GAAG,EAAEC,OAAO,CAAC;QAC1C,IAAI,CAACc,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAInB,KAAK,CAACiB,QAAQ,CAACG,UAAU,CAAC;QACxC;QACA,MAAMC,WAAW,GAAG,MAAMlD,aAAa,CAAC8C,QAAQ,CAAC;QACjD,IAAII,WAAW,YAAYrB,KAAK,EAAE;UAC9B,MAAMqB,WAAW;QACrB;QACAjB,KAAK,CAACR,OAAO,CAACM,GAAG,CAAC,GAAGmB,WAAW;QAChC,IAAIhB,aAAa,CAACT,OAAO,EAAE;QAC3BmB,QAAQ,CAAC;UACLF,IAAI,EAAE,SAAS;UACfC,OAAO,EAAEO;QACb,CAAC,CAAC;MACN,CAAC,CAAC,OAAOd,KAAK,EAAE;QACZ,IAAIF,aAAa,CAACT,OAAO,EAAE;QAC3BmB,QAAQ,CAAC;UACLF,IAAI,EAAE,OAAO;UACbC,OAAO,EAAEP;QACb,CAAC,CAAC;MACN;IACJ,CAAC;IACD,KAAKS,SAAS,CAAC,CAAC;IAChB;IACA;IACA,OAAO,MAAI;MACPX,aAAa,CAACT,OAAO,GAAG,IAAI;IAChC,CAAC;IACL;EACA,CAAC,EAAE,CACCM,GAAG,CACN,CAAC;EACF,OAAOS,KAAK;AAChB;AAEA,MAAMW,mBAAmB,GAAGA,CAACpB,GAAG,EAAEqB,QAAQ,KAAG;EACzC,MAAMC,eAAe,GAAGC,UAAU,CAACC,aAAa;EAChD,MAAM;IAAEjB;EAAK,CAAC,GAAGR,QAAQ;EAAC;EAC1BuB,eAAe,GAAGhB,SAAS,GAAGN,GAAG,CAACyB,IAAI,CAAC;EACvC,OAAO,CAACH,eAAe,IAAIf,IAAI,GAAGmB,IAAI,CAAEC,CAAC,IAAGA,CAAC,CAACC,IAAI,KAAKP,QAAQ,CAAC;AACpE,CAAC;AACD,MAAMQ,2BAA2B,GAAIC,QAAQ,IAAG;EAC5C,IAAI,CAAC3D,UAAU,CAACW,gBAAgB,CAACG,WAAW,EAAEJ,OAAO,CAAC,EAAE;IACpDkD,OAAO,CAAC1B,KAAK,CAAE,0DAAyDvB,gBAAgB,CAACG,WAAY,mBAAkBJ,OAAQ,gBAAe,CAAC;EACnJ;EACA,MAAMmD,WAAW,GAAGpD,WAAW,CAAC;IAC5BoB,GAAG,EAAE8B,QAAQ,CAAC9B,GAAG;IACjBiC,OAAO,EAAE;EACb,CAAC,CAAC;EACF,MAAMC,cAAc,GAAGA,CAACb,QAAQ,EAAEc,IAAI,KAAG;IACrC,MAAM,CAACC,WAAW,EAAEC,YAAY,CAAC,GAAGtE,QAAQ,CAAC,KAAK,CAAC;IACnD,MAAMuE,cAAc,GAAG1E,MAAM,CAAC,CAAC,CAAC;IAChC,MAAM2E,YAAY,GAAG3E,MAAM,CAAC,IAAI4E,GAAG,CAAC,CAAC,CAAC;IACtC,MAAMC,iBAAiB,GAAGrB,mBAAmB,CAACU,QAAQ,CAAC9B,GAAG,EAAEqB,QAAQ,CAAC;IACrE,MAAMqB,WAAW,GAAGpD,QAAQ,CAAC,OAAO,GAAGqD,IAAI,KAAG;MAC1C,MAAMC,KAAK,GAAG,OAAMT,IAAI,EAAEU,mBAAmB,GAAGF,IAAI,CAAC,CAAC,CAAC,CAAC,KAAIA,IAAI,CAAC,CAAC,CAAC;MACnE,MAAMG,KAAK,GAAGH,IAAI,CAAC,CAAC,CAAC;MACrBN,YAAY,CAAC,IAAI,CAAC;MAClBF,IAAI,EAAEY,gBAAgB,GAAG,CAAC,CAAC;MAC3B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMhB,WAAW,CAACX,QAAQ,EAAE;UACpC4B,OAAO,EAAEd,IAAI,EAAEc,OAAO;UACtBL,KAAK;UACLM,WAAW,EAAEf,IAAI,EAAEe,WAAW;UAC9BH,gBAAgB,EAAGI,QAAQ,IAAG;YAC1B,IAAI,CAAChB,IAAI,EAAEY,gBAAgB,EAAE;YAC7BR,YAAY,CAAC7C,OAAO,CAAC0D,GAAG,CAACD,QAAQ,CAACE,IAAI,EAAEF,QAAQ,CAACA,QAAQ,CAAC;YAC1D,IAAIG,GAAG,GAAG,CAAC;YACXf,YAAY,CAAC7C,OAAO,CAAC6D,OAAO,CAAEC,CAAC,IAAG;cAC9BF,GAAG,IAAIE,CAAC;YACZ,CAAC,CAAC;YACF,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACL,GAAG,GAAGf,YAAY,CAAC7C,OAAO,CAACkE,IAAI,GAAG,EAAE,CAAC,GAAG,EAAE;YAC7E,IAAIH,eAAe,KAAKnB,cAAc,CAAC5C,OAAO,EAAE;cAC5CyC,IAAI,EAAEY,gBAAgB,GAAGU,eAAe,CAAC;cACzCnB,cAAc,CAAC5C,OAAO,GAAG+D,eAAe;YAC5C;UACJ,CAAC;UACDI,aAAaA,CAAE;YAAER;UAAK,CAAC,EAAE;YACrB,IAAI,CAAClB,IAAI,EAAE0B,aAAa,EAAE;YAC1B1B,IAAI,CAAC0B,aAAa,CAACR,IAAI,CAAC;UAC5B,CAAC;UACD;UACAP;QACJ,CAAC,CAAC;QACFX,IAAI,EAAE2B,sBAAsB,GAAGd,GAAG,CAAC;QACnC,OAAOA,GAAG;MACd,CAAC,CAAC,OAAOe,CAAC,EAAE;QACR,IAAI1D,KAAK;QACT,IAAI0D,CAAC,YAAY3F,gBAAgB,EAAE;UAC/BiC,KAAK,GAAG0D,CAAC;QACb,CAAC,MAAM;UACH1D,KAAK,GAAGhC,qCAAqC,CAAC0F,CAAC,CAAC;UAChDhC,OAAO,CAAC1B,KAAK,CAAC,mFAAmF,EAAEA,KAAK,CAAC2D,KAAK,YAAYlE,KAAK,GAAGO,KAAK,CAAC2D,KAAK,CAACC,QAAQ,CAAC,CAAC,GAAG5D,KAAK,CAAC2D,KAAK,CAAC;QAC3K;QACA7B,IAAI,EAAE+B,aAAa,GAAG7D,KAAK,CAAC;MAChC,CAAC,SAAQ;QACLgC,YAAY,CAAC,KAAK,CAAC;QACnBE,YAAY,CAAC7C,OAAO,GAAG,IAAI8C,GAAG,CAAC,CAAC;QAChCF,cAAc,CAAC5C,OAAO,GAAG,CAAC;MAC9B;IACJ,CAAC,CAAC;IACF,OAAO;MACHgD,WAAW;MACXN,WAAW;MACXK;IACJ,CAAC;EACL,CAAC;EACD,OAAOP,cAAc;AACzB,CAAC;AACD,MAAMiC,oBAAoB,GAAIrC,QAAQ,IAAG;EACrC,MAAM9B,GAAG,GAAG9B,kBAAkB,CAAC4D,QAAQ,EAAE9B,GAAG,CAAC;EAC7C,OAAO;IACHkC,cAAc,EAAEL,2BAA2B,CAAC;MACxC7B;IACJ,CAAC,CAAC;IACFgC,WAAW,EAAEpD,WAAW,CAAC;MACrBoB,GAAG;MACHiC,OAAO,EAAE;IACb,CAAC;EACL,CAAC;AACL,CAAC;AAED,SAASmC,0BAA0BA,CAACC,KAAK,EAAE;EACvC,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,aAAa,EAAEC,KAAK;EACpD,IAAI,CAACF,iBAAiB,EAAE;EACxB,MAAM1B,KAAK,GAAG6B,KAAK,CAACC,IAAI,CAACJ,iBAAiB,CAAC,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAG;IAC5D,MAAMC,CAAC,GAAGD,IAAI,CAACE,SAAS,CAAC,CAAC;IAC1B,OAAOD,CAAC,GAAG,CACP,GAAGF,GAAG,EACNE,CAAC,CACJ,GAAGF,GAAG;EACX,CAAC,EAAE,EAAE,CAAC;EACN,OAAOhC,KAAK;AAChB;AACA,SAASoC,OAAOA,CAAA,EAAG;EACf,OAAO,aAAcvH,GAAG,CAAC,KAAK,EAAE;IAC5BwH,SAAS,EAAE,yDAAyD;IACpEC,KAAK,EAAE,4BAA4B;IACnCC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE,aAAa;IACtBC,QAAQ,EAAE,aAAc5H,GAAG,CAAC,MAAM,EAAE;MAChC0H,IAAI,EAAE,cAAc;MACpBG,CAAC,EAAE;IACP,CAAC;EACL,CAAC,CAAC;AACN;AACA,MAAMC,cAAc,GAAG;EACnB,CAAC,EAAE,WAAW;EACd,EAAE,EAAE,eAAe;EACnB,EAAE,EAAE,eAAe;EACnB,EAAE,EAAE,eAAe;EACnB,EAAE,EAAE,eAAe;EACnB,EAAE,EAAE,eAAe;EACnB,EAAE,EAAE,eAAe;EACnB,EAAE,EAAE,eAAe;EACnB,EAAE,EAAE,eAAe;EACnB,EAAE,EAAE,eAAe;EACnB,GAAG,EAAE;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC7B;EACA;EACA,MAAMC,MAAM,GAAGD,KAAK;EACpB,MAAM;IAAEE,IAAI,GAAG,MAAM;IAAEC,aAAa,GAAG;EAAM,CAAC,GAAGF,MAAM,CAACG,MAAM,IAAI,CAAC,CAAC;EACpE,MAAM3D,cAAc,GAAGL,2BAA2B,CAAC;IAC/C7B,GAAG,EAAE9B,kBAAkB,CAACwH,MAAM,CAAC1F,GAAG;EACtC,CAAC,CAAC;EACF,MAAM8F,YAAY,GAAGlI,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMmI,QAAQ,GAAGnI,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACoI,mBAAmB,EAAEC,iBAAiB,CAAC,GAAGlI,QAAQ,CAAC2H,MAAM,CAACQ,0BAA0B,IAAI,CAAC,CAAC;EACjG,MAAM,CAACtD,KAAK,EAAEuD,QAAQ,CAAC,GAAGpI,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqI,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGtI,QAAQ,CAAC,KAAK,CAAC;EAC/E,MAAMuE,cAAc,GAAGoD,MAAM,CAACQ,0BAA0B,IAAIF,mBAAmB;EAC/E,MAAM;IAAEtD,WAAW;IAAEN,WAAW;IAAEK;EAAkB,CAAC,GAAGP,cAAc,CAACwD,MAAM,CAACrE,QAAQ,EAAE;IACpF4B,OAAO,EAAEyC,MAAM,CAACzC,OAAO;IACvBC,WAAW,EAAE,CAACwC,MAAM,EAAE5B,sBAAsB,GAAG,IAAI,GAAG4B,MAAM,EAAExC,WAAW;IACzEY,sBAAsB,EAAGd,GAAG,IAAG;MAC3B,IAAI8C,YAAY,CAACpG,OAAO,EAAE;QACtBoG,YAAY,CAACpG,OAAO,CAAC4G,KAAK,GAAG,EAAE;MACnC;MACAD,2BAA2B,CAAC,KAAK,CAAC;MAClCF,QAAQ,CAAC,EAAE,CAAC;MACZT,MAAM,CAAC5B,sBAAsB,GAAGd,GAAG,CAAC;MACpCiD,iBAAiB,CAAC,CAAC,CAAC;IACxB,CAAC;IACDlD,gBAAgB,EAAGS,CAAC,IAAG;MACnByC,iBAAiB,CAACzC,CAAC,CAAC;MACpBkC,MAAM,CAAC3C,gBAAgB,GAAGS,CAAC,CAAC;IAChC,CAAC;IACDU,aAAa,EAAEwB,MAAM,CAACxB,aAAa;IACnCL,aAAa,EAAE6B,MAAM,CAAC7B,aAAa;IACnChB,mBAAmB,EAAE6C,MAAM,CAAC7C;EAChC,CAAC,CAAC;EACF,MAAM;IAAE0D,SAAS;IAAEC;EAAS,CAAC,GAAGlI,0BAA0B,CAACmE,iBAAiB,EAAEoD,MAAM,CAAC;EACrF,MAAMY,KAAK,GAAGf,MAAM,CAACgB,gBAAgB,KAAKhB,MAAM,CAACiB,gBAAgB,KAAK,OAAO,IAAIJ,SAAS,CAACK,MAAM,GAAG,CAAC,CAAC;EACtG9I,SAAS,CAAC,MAAI;IACV,MAAM+I,WAAW,GAAIxC,KAAK,IAAG;MACzB,IAAI,CAACuB,aAAa,EAAE;MACpB,IAAIkB,QAAQ,CAACC,aAAa,KAAKhB,QAAQ,CAACrG,OAAO,EAAE;MACjD,MAAMsH,WAAW,GAAG5C,0BAA0B,CAACC,KAAK,CAAC;MACrD,IAAI,CAAC2C,WAAW,EAAE;MAClBb,QAAQ,CAAEc,IAAI,IAAG,CACT,GAAGA,IAAI,EACP,GAAGD,WAAW,CACjB,CAAC;MACN,IAAIrB,IAAI,KAAK,MAAM,EAAE;QACjB,MAAM7C,KAAK,GAAG,OAAO,IAAI4C,MAAM,GAAGA,MAAM,CAAC5C,KAAK,GAAGxC,SAAS;QAC1D,KAAKoC,WAAW,CAACE,KAAK,EAAEE,KAAK,CAAC;MAClC;IACJ,CAAC;IACD1D,MAAM,CAAC8H,gBAAgB,CAAC,OAAO,EAAEL,WAAW,CAAC;IAC7C,OAAO,MAAI;MACPzH,MAAM,CAAC+H,mBAAmB,CAAC,OAAO,EAAEN,WAAW,CAAC;IACpD,CAAC;EACL,CAAC,EAAE,CACCnE,WAAW,EACXkD,aAAa,EACbF,MAAM,EACN9C,KAAK,EACL+C,IAAI,EACJY,SAAS,CACZ,CAAC;EACF,MAAMa,mBAAmB,GAAIb,SAAS,IAAG;IACrC,IAAIH,wBAAwB,EAAE,OAAQ,UAASxD,KAAK,CAACgE,MAAO,QAAOhE,KAAK,CAACgE,MAAM,KAAK,CAAC,GAAG,EAAE,GAAG,GAAI,EAAC;IAClG,IAAIL,SAAS,CAACK,MAAM,KAAK,CAAC,EAAE,OAAO,YAAY;IAC/C,OAAQ,cAAaJ,QAAQ,GAAI,KAAI,GAAI,EAAE,EAAC;EAChD,CAAC;EACD,MAAMa,uBAAuB,GAAId,SAAS,IAAG;IACzC,IAAI9F,KAAK,KAAK,WAAW,EAAE;MACvB,OAAO2G,mBAAmB,CAACb,SAAS,CAAC;IACzC;IACA,IAAIjE,cAAc,KAAK,GAAG,EAAE;MACxB,OAAO,aAAc7E,GAAG,CAACuH,OAAO,EAAE,CAAC,CAAC,CAAC;IACzC;IACA,OAAO,aAActH,IAAI,CAAC,MAAM,EAAE;MAC9BuH,SAAS,EAAE,MAAM;MACjBI,QAAQ,EAAE,CACN/C,cAAc,EACd,GAAG;IAEX,CAAC,CAAC;EACN,CAAC;EACD,MAAMgF,aAAa,GAAGA,CAAA,MAAK;IACnB3G,IAAI,EAAE,MAAM;IACZ4G,GAAG,EAAEzB,YAAY;IACjBU,QAAQ;IACRgB,MAAM,EAAE9I,iBAAiB,CAAC6H,SAAS,IAAI,EAAE,CAAC,EAAEkB,IAAI,CAAC,IAAI,CAAC;IACtDC,QAAQ,EAAG3D,CAAC,IAAG;MACX,IAAI,CAACA,CAAC,CAAC4D,MAAM,CAAC/E,KAAK,EAAE;MACrB,MAAMgF,aAAa,GAAGnD,KAAK,CAACC,IAAI,CAACX,CAAC,CAAC4D,MAAM,CAAC/E,KAAK,CAAC;MAChD,IAAI+C,IAAI,KAAK,QAAQ,EAAE;QACnBQ,QAAQ,CAACyB,aAAa,CAAC;QACvBvB,2BAA2B,CAAC,IAAI,CAAC;QACjC;MACJ;MACA,MAAMvD,KAAK,GAAG,OAAO,IAAI4C,MAAM,GAAGA,MAAM,CAAC5C,KAAK,GAAGxC,SAAS;MAC1D,KAAKoC,WAAW,CAACkF,aAAa,EAAE9E,KAAK,CAAC;IAC1C,CAAC;IACD+E,QAAQ,EAAEnC,MAAM,CAACoC,0BAA0B,IAAI,CAACrB,KAAK;IACrD,IAAG,EAAEf,MAAM,CAACoC,0BAA0B,IAAI,CAACrB,KAAK,CAAC,GAAG;MAChDsB,QAAQ,EAAE;IACd,CAAC,GAAG,CAAC,CAAC;EACV,CAAC,CAAC;EACN,MAAMC,aAAa,GAAG;IAClBvB,KAAK,EAAEA,KAAK;IACZrE,WAAW,EAAEsD,MAAM,CAACiB,gBAAgB,KAAK,WAAW,IAAIvE,WAAW;IACnEE,cAAc;IACdiE;EACJ,CAAC;EACD,MAAM9F,KAAK,GAAG,CAAC,MAAI;IACf,IAAIiF,MAAM,CAACiB,gBAAgB,EAAE,OAAOjB,MAAM,CAACiB,gBAAgB;IAC3D,IAAI,CAACF,KAAK,EAAE,OAAO,UAAU;IAC7B,IAAIA,KAAK,IAAI,CAACrE,WAAW,EAAE,OAAO,OAAO;IACzC,OAAO,WAAW;EACtB,CAAC,EAAE,CAAC;EACJ,MAAM6F,iBAAiB,GAAGA,CAAA,KAAI,aAAcxK,GAAG,CAAC,QAAQ,EAAE;IAClDyK,OAAO,EAAEA,CAAA,KAAI;MACT/B,QAAQ,CAAC,EAAE,CAAC;MACZE,2BAA2B,CAAC,KAAK,CAAC;MAClC,IAAIP,YAAY,CAACpG,OAAO,EAAE;QACtBoG,YAAY,CAACpG,OAAO,CAAC4G,KAAK,GAAG,EAAE;MACnC;IACJ,CAAC;IACDrB,SAAS,EAAEjH,OAAO,CAAC,sIAAsI,EAAEO,qBAAqB,CAACmH,MAAM,CAACyC,UAAU,EAAEC,QAAQ,EAAEJ,aAAa,CAAC,CAAC;IAC7NK,KAAK,EAAE7J,qBAAqB,CAACkH,MAAM,CAACyC,UAAU,EAAEC,QAAQ,EAAEJ,aAAa,CAAC;IACxE,YAAY,EAAEvH,KAAK;IACnB,iBAAiB,EAAE,WAAW;IAC9B4E,QAAQ,EAAE5G,qBAAqB,CAACiH,MAAM,CAAC4C,OAAO,EAAEF,QAAQ,EAAEJ,aAAa,CAAC,IAAI;EAChF,CAAC,CAAC;EACN,MAAMO,oBAAoB,GAAGA,CAAA,KAAI,aAAc9K,GAAG,CAAC,KAAK,EAAE;IAClDwH,SAAS,EAAEjH,OAAO,CAAC,8CAA8C,EAAEO,qBAAqB,CAACmH,MAAM,CAACyC,UAAU,EAAEK,cAAc,EAAER,aAAa,CAAC,CAAC;IAC3IK,KAAK,EAAE7J,qBAAqB,CAACkH,MAAM,CAACyC,UAAU,EAAEK,cAAc,EAAER,aAAa,CAAC;IAC9E,YAAY,EAAEvH,KAAK;IACnB,iBAAiB,EAAE,iBAAiB;IACpC4E,QAAQ,EAAE5G,qBAAqB,CAACiH,MAAM,CAAC4C,OAAO,EAAEE,cAAc,EAAER,aAAa,CAAC,IAAIrJ,gCAAgC,CAAC8D,iBAAiB,EAAEoD,MAAM;EAChJ,CAAC,CAAC;EACN,OAAO,aAAcnI,IAAI,CAAC,KAAK,EAAE;IAC7BuH,SAAS,EAAEjH,OAAO,CAAC,iDAAiD,EAAE0H,MAAM,CAACT,SAAS,EAAE1G,qBAAqB,CAACmH,MAAM,CAACyC,UAAU,EAAEM,SAAS,EAAET,aAAa,CAAC,CAAC;IAC3JK,KAAK,EAAE7J,qBAAqB,CAACkH,MAAM,CAACyC,UAAU,EAAEM,SAAS,EAAET,aAAa,CAAC;IACzE,YAAY,EAAEvH,KAAK;IACnB4E,QAAQ,EAAE,CACN,aAAc3H,IAAI,CAAC,OAAO,EAAE;MACxBuH,SAAS,EAAEjH,OAAO,CAAC,gOAAgO,EAAEyC,KAAK,KAAK,UAAU,IAAI,gCAAgC,EAAEA,KAAK,KAAK,WAAW,IAAK,6FAA4F8E,cAAc,CAACjD,cAAc,CAAE,EAAC,EAAE7B,KAAK,KAAK,OAAO,IAAI,aAAa,EAAElC,qBAAqB,CAACmH,MAAM,CAACyC,UAAU,EAAEO,MAAM,EAAEV,aAAa,CAAC,CAAC;MAC3iBK,KAAK,EAAE7J,qBAAqB,CAACkH,MAAM,CAACyC,UAAU,EAAEO,MAAM,EAAEV,aAAa,CAAC;MACtE,YAAY,EAAEvH,KAAK;MACnB,iBAAiB,EAAE,QAAQ;MAC3B8G,GAAG,EAAExB,QAAQ;MACbmC,OAAO,EAAGnE,CAAC,IAAG;QACV,IAAIqC,wBAAwB,EAAE;UAC1BrC,CAAC,CAAC4E,cAAc,CAAC,CAAC;UAClB5E,CAAC,CAAC6E,eAAe,CAAC,CAAC;UACnB,MAAM9F,KAAK,GAAG,OAAO,IAAI4C,MAAM,GAAGA,MAAM,CAAC5C,KAAK,GAAGxC,SAAS;UAC1D,KAAKoC,WAAW,CAACE,KAAK,EAAEE,KAAK,CAAC;QAClC;MACJ,CAAC;MACDuC,QAAQ,EAAE,CACN,aAAc5H,GAAG,CAAC,OAAO,EAAE;QACvB,GAAG6J,aAAa,CAAC,CAAC;QAClBrC,SAAS,EAAE;MACf,CAAC,CAAC,EACFxG,qBAAqB,CAACiH,MAAM,CAAC4C,OAAO,EAAEI,MAAM,EAAEV,aAAa,CAAC,IAAIX,uBAAuB,CAACd,SAAS,CAAC;IAE1G,CAAC,CAAC,EACFZ,IAAI,KAAK,QAAQ,IAAI/C,KAAK,CAACgE,MAAM,GAAG,CAAC,GAAGqB,iBAAiB,CAAC,CAAC,GAAGM,oBAAoB,CAAC,CAAC;EAE5F,CAAC,CAAC;AACN;AAEA,SAAS1G,2BAA2B,IAAIgH,CAAC,EAAE7D,OAAO,IAAI8D,CAAC,EAAEtD,YAAY,IAAIuD,CAAC,EAAE5E,oBAAoB,IAAI6E,CAAC,EAAE5E,0BAA0B,IAAI6E,CAAC,EAAE1D,cAAc,IAAI/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}