{"ast":null,"code":"var _jsxFileName = \"D:\\\\an3_facultate\\\\sem1\\\\IS\\\\laboratoare\\\\SocialApp-Fe\\\\social-media-front\\\\src\\\\widgets\\\\messaging-overview-widget\\\\MessagingOverviewWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ChatOverview from \"../../components/messaging/ChatOverview/ChatOverview\";\nimport ChatList from \"../../components/messaging/ChatList/ChatList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sessionSelect } from \"../../redux/core/session/selectors\";\nimport { dataRequested } from \"./model/effects\";\nimport { messageSelect } from \"./model/selectors\";\nimport { closeSidebar, showSidebar } from \"../../redux/core/layout/reducers\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authSelect } from \"../auth-login-widget/model/selectors\";\nimport { closeProfile } from \"../profile-overview-widget/model/reducers\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagingOverviewWidget = () => {\n  _s();\n  const username = useSelector(sessionSelect.username);\n  const userId = useSelector(sessionSelect.userId);\n  const isLogged = useSelector(authSelect.isLogged);\n  const jwtToken = useSelector(sessionSelect.jwtToken);\n  const conversations = useSelector(messageSelect.conversations);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    const darkModeSetting = localStorage.getItem('hasDarkMode') === 'true';\n    setIsDarkMode(darkModeSetting);\n  }, []);\n  useEffect(() => {\n    dispatch(showSidebar());\n    dispatch(closeProfile());\n    if (!isLogged) {\n      navigate('/login');\n      dispatch(closeSidebar());\n    }\n    dataRequested({\n      userId,\n      jwtToken,\n      dispatch\n    });\n  }, [dispatch, jwtToken, userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messaging-overview\",\n    children: [/*#__PURE__*/_jsxDEV(ChatList, {\n      username: username,\n      conversations: conversations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatOverview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(MessagingOverviewWidget, \"7FaFU8GPTawuCScZ2icjbHbBHsg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useNavigate];\n});\n_c = MessagingOverviewWidget;\nexport default MessagingOverviewWidget;\nvar _c;\n$RefreshReg$(_c, \"MessagingOverviewWidget\");","map":{"version":3,"names":["React","useEffect","useState","ChatOverview","ChatList","useDispatch","useSelector","sessionSelect","dataRequested","messageSelect","closeSidebar","showSidebar","useNavigate","authSelect","closeProfile","jsxDEV","_jsxDEV","MessagingOverviewWidget","_s","username","userId","isLogged","jwtToken","conversations","dispatch","navigate","isDarkMode","setIsDarkMode","darkModeSetting","localStorage","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/widgets/messaging-overview-widget/MessagingOverviewWidget.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport ChatOverview from \"../../components/messaging/ChatOverview/ChatOverview\";\r\nimport ChatList from \"../../components/messaging/ChatList/ChatList\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sessionSelect} from \"../../redux/core/session/selectors\";\r\nimport {dataRequested} from \"./model/effects\";\r\nimport {messageSelect} from \"./model/selectors\";\r\nimport {closeSidebar, showSidebar} from \"../../redux/core/layout/reducers\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {authSelect} from \"../auth-login-widget/model/selectors\";\r\nimport {closeProfile} from \"../profile-overview-widget/model/reducers\";\r\nimport './styles.css';\r\n\r\nconst MessagingOverviewWidget: React.FC = () => {\r\n    const username = useSelector(sessionSelect.username);\r\n    const userId = useSelector(sessionSelect.userId);\r\n    const isLogged = useSelector(authSelect.isLogged);\r\n    const jwtToken = useSelector(sessionSelect.jwtToken);\r\n    const conversations = useSelector(messageSelect.conversations);\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const darkModeSetting = localStorage.getItem('hasDarkMode') === 'true';\r\n        setIsDarkMode(darkModeSetting);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(showSidebar());\r\n        dispatch(closeProfile());\r\n        if(!isLogged) {\r\n            navigate('/login');\r\n            dispatch(closeSidebar());\r\n        }\r\n        dataRequested({userId, jwtToken, dispatch});\r\n    }, [dispatch, jwtToken, userId])\r\n\r\n    return (\r\n        <div className='messaging-overview'>\r\n            <ChatList username={username} conversations={conversations}/>\r\n            <ChatOverview/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MessagingOverviewWidget;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,YAAY,MAAM,sDAAsD;AAC/E,OAAOC,QAAQ,MAAM,8CAA8C;AACnE,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,aAAa,QAAO,oCAAoC;AAChE,SAAQC,aAAa,QAAO,iBAAiB;AAC7C,SAAQC,aAAa,QAAO,mBAAmB;AAC/C,SAAQC,YAAY,EAAEC,WAAW,QAAO,kCAAkC;AAC1E,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,UAAU,QAAO,sCAAsC;AAC/D,SAAQC,YAAY,QAAO,2CAA2C;AACtE,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,uBAAiC,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5C,MAAMC,QAAQ,GAAGb,WAAW,CAACC,aAAa,CAACY,QAAQ,CAAC;EACpD,MAAMC,MAAM,GAAGd,WAAW,CAACC,aAAa,CAACa,MAAM,CAAC;EAChD,MAAMC,QAAQ,GAAGf,WAAW,CAACO,UAAU,CAACQ,QAAQ,CAAC;EACjD,MAAMC,QAAQ,GAAGhB,WAAW,CAACC,aAAa,CAACe,QAAQ,CAAC;EACpD,MAAMC,aAAa,GAAGjB,WAAW,CAACG,aAAa,CAACc,aAAa,CAAC;EAE9D,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAMoB,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACZ,MAAM2B,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,KAAK,MAAM;IACtEH,aAAa,CAACC,eAAe,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN3B,SAAS,CAAC,MAAM;IACZuB,QAAQ,CAACb,WAAW,CAAC,CAAC,CAAC;IACvBa,QAAQ,CAACV,YAAY,CAAC,CAAC,CAAC;IACxB,IAAG,CAACO,QAAQ,EAAE;MACVI,QAAQ,CAAC,QAAQ,CAAC;MAClBD,QAAQ,CAACd,YAAY,CAAC,CAAC,CAAC;IAC5B;IACAF,aAAa,CAAC;MAACY,MAAM;MAAEE,QAAQ;MAAEE;IAAQ,CAAC,CAAC;EAC/C,CAAC,EAAE,CAACA,QAAQ,EAAEF,QAAQ,EAAEF,MAAM,CAAC,CAAC;EAEhC,oBACIJ,OAAA;IAAKe,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BhB,OAAA,CAACZ,QAAQ;MAACe,QAAQ,EAAEA,QAAS;MAACI,aAAa,EAAEA;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC7DpB,OAAA,CAACb,YAAY;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAAClB,EAAA,CAhCID,uBAAiC;EAAA,QAClBX,WAAW,EACbA,WAAW,EACTA,WAAW,EACXA,WAAW,EACNA,WAAW,EAEhBD,WAAW,EACXO,WAAW;AAAA;AAAAyB,EAAA,GAR1BpB,uBAAiC;AAkCvC,eAAeA,uBAAuB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}