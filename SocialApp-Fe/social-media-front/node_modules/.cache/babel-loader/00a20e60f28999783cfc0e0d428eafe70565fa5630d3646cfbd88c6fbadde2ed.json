{"ast":null,"code":"import { request } from \"../../../components/core/Request/request\";\nimport { CONNECTIONS_BASE_URL, CONTENT_BASE_URL } from \"../../../utils/constants\";\nimport { feedPostsSuccess, feedStoriesSuccess, suggestedFriendsSuccess, suggestedPostsSuccess } from \"./reducers\";\nexport const dataRequested = async ({\n  userId,\n  jwtToken,\n  dispatch\n}) => {\n  await request({\n    url: CONTENT_BASE_URL + '/getFeedPosts/' + userId,\n    method: 'GET',\n    headers: {\n      'Authorization': \"Bearer \" + jwtToken\n    }\n  }).then(response => {\n    dispatch(feedPostsSuccess(response.data));\n  }).catch(error => {\n    console.error(error);\n  });\n  await request({\n    url: CONTENT_BASE_URL + '/getFeedStories/' + userId,\n    method: 'GET',\n    headers: {\n      Authorization: \"Bearer \" + jwtToken\n    }\n  }).then(response => {\n    dispatch(feedStoriesSuccess(response.data));\n  }).catch(error => {\n    console.error(error);\n  });\n  await request({\n    url: CONTENT_BASE_URL + '/getSuggestedPosts/' + userId,\n    method: 'GET',\n    headers: {\n      Authorization: \"Bearer \" + jwtToken\n    }\n  }).then(response => {\n    dispatch(suggestedPostsSuccess(response.data));\n  }).catch(error => {\n    console.error(error);\n  });\n  await request({\n    url: CONNECTIONS_BASE_URL + '/getSuggestedFriends/' + userId,\n    method: 'GET',\n    headers: {\n      Authorization: \"Bearer \" + jwtToken\n    }\n  }).then(response => {\n    dispatch(suggestedFriendsSuccess(response.data));\n  }).catch(error => {\n    console.error(error);\n  });\n};","map":{"version":3,"names":["request","CONNECTIONS_BASE_URL","CONTENT_BASE_URL","feedPostsSuccess","feedStoriesSuccess","suggestedFriendsSuccess","suggestedPostsSuccess","dataRequested","userId","jwtToken","dispatch","url","method","headers","then","response","data","catch","error","console","Authorization"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/widgets/feed-main-widget/model/effects.ts"],"sourcesContent":["import {request} from \"../../../components/core/Request/request\";\r\nimport {CONNECTIONS_BASE_URL, CONTENT_BASE_URL} from \"../../../utils/constants\";\r\nimport {\r\n    feedPostsSuccess,\r\n    feedStoriesSuccess,\r\n    suggestedFriendsSuccess,\r\n    suggestedPostsSuccess\r\n} from \"./reducers\";\r\nimport {EffectsPayload} from \"./types\";\r\n\r\nexport const dataRequested = async ({ userId, jwtToken, dispatch}: EffectsPayload) => {\r\n    await request({\r\n        url: CONTENT_BASE_URL + '/getFeedPosts/' + userId,\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization' : \"Bearer \" + jwtToken\r\n        }\r\n    }).then((response) => {\r\n        dispatch(feedPostsSuccess(response.data));\r\n    }).catch((error) => {\r\n        console.error(error);\r\n    })\r\n\r\n    await request({\r\n        url: CONTENT_BASE_URL + '/getFeedStories/' + userId,\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization : \"Bearer \" + jwtToken\r\n        }\r\n    }).then((response) => {\r\n        dispatch(feedStoriesSuccess(response.data));\r\n    }).catch((error) => {\r\n        console.error(error);\r\n    })\r\n\r\n    await request({\r\n        url: CONTENT_BASE_URL + '/getSuggestedPosts/' + userId,\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization : \"Bearer \" + jwtToken\r\n        }\r\n    }).then((response) => {\r\n        dispatch(suggestedPostsSuccess(response.data));\r\n    }).catch((error) => {\r\n        console.error(error);\r\n    })\r\n\r\n    await request({\r\n        url: CONNECTIONS_BASE_URL + '/getSuggestedFriends/' + userId,\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization : \"Bearer \" + jwtToken\r\n        }\r\n    }).then((response) => {\r\n        dispatch(suggestedFriendsSuccess(response.data));\r\n    }).catch((error) => {\r\n        console.error(error);\r\n    })\r\n}"],"mappings":"AAAA,SAAQA,OAAO,QAAO,0CAA0C;AAChE,SAAQC,oBAAoB,EAAEC,gBAAgB,QAAO,0BAA0B;AAC/E,SACIC,gBAAgB,EAChBC,kBAAkB,EAClBC,uBAAuB,EACvBC,qBAAqB,QAClB,YAAY;AAGnB,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAO;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAwB,CAAC,KAAK;EAClF,MAAMV,OAAO,CAAC;IACVW,GAAG,EAAET,gBAAgB,GAAG,gBAAgB,GAAGM,MAAM;IACjDI,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,eAAe,EAAG,SAAS,GAAGJ;IAClC;EACJ,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;IAClBL,QAAQ,CAACP,gBAAgB,CAACY,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC7C,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB,CAAC,CAAC;EAEF,MAAMlB,OAAO,CAAC;IACVW,GAAG,EAAET,gBAAgB,GAAG,kBAAkB,GAAGM,MAAM;IACnDI,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACLO,aAAa,EAAG,SAAS,GAAGX;IAChC;EACJ,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;IAClBL,QAAQ,CAACN,kBAAkB,CAACW,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB,CAAC,CAAC;EAEF,MAAMlB,OAAO,CAAC;IACVW,GAAG,EAAET,gBAAgB,GAAG,qBAAqB,GAAGM,MAAM;IACtDI,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACLO,aAAa,EAAG,SAAS,GAAGX;IAChC;EACJ,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;IAClBL,QAAQ,CAACJ,qBAAqB,CAACS,QAAQ,CAACC,IAAI,CAAC,CAAC;EAClD,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB,CAAC,CAAC;EAEF,MAAMlB,OAAO,CAAC;IACVW,GAAG,EAAEV,oBAAoB,GAAG,uBAAuB,GAAGO,MAAM;IAC5DI,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACLO,aAAa,EAAG,SAAS,GAAGX;IAChC;EACJ,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;IAClBL,QAAQ,CAACL,uBAAuB,CAACU,QAAQ,CAACC,IAAI,CAAC,CAAC;EACpD,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}