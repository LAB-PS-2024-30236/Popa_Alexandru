{"ast":null,"code":"var _jsxFileName = \"D:\\\\an3_facultate\\\\sem1\\\\IS\\\\laboratoare\\\\SocialApp-Fe\\\\social-media-front\\\\src\\\\widgets\\\\feed-main-widget\\\\FeedMainWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\"; // Import useState\nimport './styles.css';\nimport StorySlider from \"../../components/feed/StorySlider/StorySlider\";\nimport PostList from \"../../components/feed/PostList/PostList\";\nimport FeedSidebar from \"../../components/feed/FeedSidebar/FeedSidebar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { sessionSelect } from \"../../redux/core/session/selectors\";\nimport { feedSelect } from \"./model/selectors\";\nimport { dataRequested } from \"./model/effects\";\nimport { authSelect } from \"../auth-login-widget/model/selectors\";\nimport { closeSidebar } from \"../../redux/core/layout/reducers\";\nimport { closeProfile } from \"../profile-overview-widget/model/reducers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeedMainWidget = () => {\n  _s();\n  const userId = useSelector(sessionSelect.userId);\n  const jwtToken = useSelector(sessionSelect.jwtToken);\n  const feedPosts = useSelector(feedSelect.feedPosts);\n  const feedRandomPosts = useSelector(feedSelect.feedRandomPosts);\n  const feedStories = useSelector(feedSelect.feedStories);\n  const isLogged = useSelector(authSelect.isLogged);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showDiscoverPosts, setShowDiscoverPosts] = useState(false); // State to control the visibility of discover posts\n  const [showButtons, setShowButtons] = useState(true); // State to control the visibility of buttons\n\n  useEffect(() => {\n    dispatch(closeProfile());\n    dataRequested({\n      userId,\n      jwtToken,\n      dispatch\n    });\n    if (!isLogged) {\n      navigate('/login');\n      dispatch(closeSidebar());\n    }\n  }, [jwtToken, userId]);\n  const handleDiscoverClick = () => {\n    setShowDiscoverPosts(true); // Show the discover posts\n    setShowButtons(false); // Hide the buttons\n  };\n\n  const handleBackTopClick = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    }); // Scroll to the top of the page\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"widget-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-central\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StorySlider, {\n          stories: feedStories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), feedStories.length > 0 ?\n        /*#__PURE__*/\n        // If there are no feedStories, show feedRandomPosts\n        _jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(PostList, {\n            posts: feedRandomPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)\n        }, void 0, false) :\n        /*#__PURE__*/\n        // If there are feedStories, show the usual content\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PostList, {\n            posts: feedPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), feedPosts.length === 0 && showDiscoverPosts && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"end-of-post\",\n            children: \"You are now seeing random posts because the posts from your friends ended\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 37\n          }, this), showDiscoverPosts && /*#__PURE__*/_jsxDEV(PostList, {\n            posts: feedRandomPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 55\n          }, this), console.table(feedRandomPosts), showButtons && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-75\",\n              onClick: handleDiscoverClick,\n              children: \"Discover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-75\",\n              onClick: handleBackTopClick,\n              children: \"Go Back Top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FeedSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(FeedMainWidget, \"CkiYhGk65zZHYfTTqi8i44B5Cys=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useNavigate, useDispatch];\n});\n_c = FeedMainWidget;\nexport default FeedMainWidget;\nvar _c;\n$RefreshReg$(_c, \"FeedMainWidget\");","map":{"version":3,"names":["React","useEffect","useState","StorySlider","PostList","FeedSidebar","useDispatch","useSelector","useNavigate","sessionSelect","feedSelect","dataRequested","authSelect","closeSidebar","closeProfile","jsxDEV","_jsxDEV","Fragment","_Fragment","FeedMainWidget","_s","userId","jwtToken","feedPosts","feedRandomPosts","feedStories","isLogged","navigate","dispatch","showDiscoverPosts","setShowDiscoverPosts","showButtons","setShowButtons","handleDiscoverClick","handleBackTopClick","window","scrollTo","top","behavior","className","children","stories","fileName","_jsxFileName","lineNumber","columnNumber","length","posts","console","table","onClick","_c","$RefreshReg$"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/widgets/feed-main-widget/FeedMainWidget.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\"; // Import useState\r\nimport './styles.css';\r\nimport StorySlider from \"../../components/feed/StorySlider/StorySlider\";\r\nimport PostList from \"../../components/feed/PostList/PostList\";\r\nimport FeedSidebar from \"../../components/feed/FeedSidebar/FeedSidebar\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {sessionSelect} from \"../../redux/core/session/selectors\";\r\nimport {feedSelect} from \"./model/selectors\";\r\nimport {dataRequested} from \"./model/effects\";\r\nimport {authSelect} from \"../auth-login-widget/model/selectors\";\r\nimport {closeSidebar} from \"../../redux/core/layout/reducers\";\r\nimport {closeProfile} from \"../profile-overview-widget/model/reducers\";\r\nimport {Post} from \"../../types/content\";\r\n\r\nconst FeedMainWidget: React.FC = () => {\r\n    const userId = useSelector(sessionSelect.userId);\r\n    const jwtToken = useSelector(sessionSelect.jwtToken);\r\n    const feedPosts = useSelector(feedSelect.feedPosts);\r\n    const feedRandomPosts: Post[] = useSelector(feedSelect.feedRandomPosts);\r\n    const feedStories = useSelector(feedSelect.feedStories);\r\n    const isLogged = useSelector(authSelect.isLogged);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [showDiscoverPosts, setShowDiscoverPosts] = useState(false); // State to control the visibility of discover posts\r\n    const [showButtons, setShowButtons] = useState(true); // State to control the visibility of buttons\r\n\r\n    useEffect(() => {\r\n        dispatch(closeProfile());\r\n        dataRequested({userId, jwtToken, dispatch})\r\n\r\n        if (!isLogged) {\r\n            navigate('/login');\r\n            dispatch(closeSidebar());\r\n        }\r\n    }, [jwtToken, userId]);\r\n\r\n    const handleDiscoverClick = () => {\r\n        setShowDiscoverPosts(true); // Show the discover posts\r\n        setShowButtons(false); // Hide the buttons\r\n    };\r\n\r\n    const handleBackTopClick = () => {\r\n        window.scrollTo({top: 0, behavior: 'smooth'}); // Scroll to the top of the page\r\n    };\r\n\r\n    return (\r\n        <div className=\"widget-main\">\r\n            <div className=\"feed-central\">\r\n                <>\r\n                    <StorySlider stories={feedStories}/>\r\n                    {\r\n                        feedStories.length > 0 ? (\r\n                            // If there are no feedStories, show feedRandomPosts\r\n                            <>\r\n                                <PostList posts={feedRandomPosts} />\r\n                            </>\r\n                        ) : (\r\n                            // If there are feedStories, show the usual content\r\n                            <>\r\n                                <PostList posts={feedPosts} />\r\n                                {/* Show the end-of-post message only if feedPosts is empty and showDiscoverPosts is true */}\r\n                                {feedPosts.length === 0 && showDiscoverPosts && (\r\n                                    <p className=\"end-of-post\">You are now seeing random posts because the posts from your friends ended</p>\r\n                                )}\r\n                                {/* Conditionally render the PostList for feedRandomPosts only if showDiscoverPosts is true */}\r\n                                {showDiscoverPosts && <PostList posts={feedRandomPosts} />}\r\n                                {/* Debugging purposes only, remove for production */}\r\n                                {console.table(feedRandomPosts)}\r\n                                {/* Show buttons if showButtons is true */}\r\n                                {showButtons && (\r\n                                    <div className=\"buttons-container\">\r\n                                        <button className=\"button-75\" onClick={handleDiscoverClick}>Discover</button>\r\n                                        <button className=\"button-75\" onClick={handleBackTopClick}>Go Back Top</button>\r\n                                    </div>\r\n                                )}\r\n                            </>\r\n                        )\r\n                    }\r\n\r\n                </>\r\n            </div>\r\n            <FeedSidebar/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeedMainWidget;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}