{"ast":null,"code":"import { request } from \"../../../components/core/Request/request\";\nimport { MESSAGES_BASE_URL } from \"../../../utils/constants\";\nimport { conversationsSuccess, personChatsSuccess } from \"./reducers\";\nexport const dataRequested = async ({\n  userId,\n  jwtToken,\n  dispatch\n}) => {\n  await request({\n    url: MESSAGES_BASE_URL + 'getPersonConversations/' + userId,\n    method: 'GET',\n    headers: {\n      'Authorization': \"Bearer \" + jwtToken\n    }\n  }).then(response => {\n    dispatch(conversationsSuccess(response.data));\n  }).catch(error => {\n    console.error(error);\n  });\n};\nexport const getPersonChats = async ({\n  userId,\n  jwtToken,\n  dispatch,\n  receiverId\n}) => {\n  await request({\n    url: MESSAGES_BASE_URL + 'getPersonChat/' + userId + '/' + receiverId,\n    method: 'GET',\n    data: {\n      userId,\n      receiverId\n    },\n    headers: {\n      Authorization: \"Bearer \" + jwtToken\n    }\n  }).then(response => {\n    dispatch(personChatsSuccess(response.data));\n  }).catch(error => {\n    console.error(error);\n  });\n};\nexport const readPersonChat = async ({\n  userId,\n  messageId,\n  jwtToken,\n  dispatch\n}) => {\n  await request({\n    url: MESSAGES_BASE_URL + 'updateReadStatus',\n    method: 'POST',\n    data: {\n      messageId,\n      isRead: false\n    },\n    headers: {\n      Authorization: \"Bearer \" + jwtToken\n    }\n  }).then(response => {\n    dataRequested({\n      userId,\n      jwtToken,\n      dispatch\n    });\n  }).catch(error => {\n    console.error(error);\n  });\n};","map":{"version":3,"names":["request","MESSAGES_BASE_URL","conversationsSuccess","personChatsSuccess","dataRequested","userId","jwtToken","dispatch","url","method","headers","then","response","data","catch","error","console","getPersonChats","receiverId","Authorization","readPersonChat","messageId","isRead"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/widgets/messaging-overview-widget/model/effects.ts"],"sourcesContent":["import {request} from \"../../../components/core/Request/request\";\r\nimport { MESSAGES_BASE_URL } from \"../../../utils/constants\";\r\nimport {conversationsSuccess, personChatsSuccess} from \"./reducers\";\r\nimport {EffectsPayload} from \"../../feed-main-widget/model/types\";\r\nimport {ChatEffectsPayload, ReadChatEffectsPayload} from \"./types\";\r\n\r\nexport const dataRequested = async ({ userId, jwtToken, dispatch}: EffectsPayload) => {\r\n    await request({\r\n        url: MESSAGES_BASE_URL + 'getPersonConversations/' + userId,\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization' : \"Bearer \" + jwtToken\r\n        }\r\n    }).then((response) => {\r\n        dispatch(conversationsSuccess(response.data));\r\n    }).catch((error) => {\r\n        console.error(error);\r\n    })\r\n}\r\n\r\nexport const getPersonChats = async ({ userId, jwtToken, dispatch, receiverId}: ChatEffectsPayload) => {\r\n    await request({\r\n        url: MESSAGES_BASE_URL + 'getPersonChat/' + userId + '/' + receiverId,\r\n        method: 'GET',\r\n        data: {userId, receiverId},\r\n        headers: {\r\n            Authorization : \"Bearer \" + jwtToken\r\n        }\r\n    }).then((response) => {\r\n        dispatch(personChatsSuccess(response.data));\r\n    }).catch((error) => {\r\n        console.error(error);\r\n    })\r\n}\r\n\r\nexport const readPersonChat = async ({userId, messageId, jwtToken, dispatch}: ReadChatEffectsPayload) => {\r\n    await request({\r\n        url: MESSAGES_BASE_URL + 'updateReadStatus',\r\n        method: 'POST',\r\n        data: {messageId, isRead: false},\r\n        headers: {\r\n            Authorization : \"Bearer \" + jwtToken\r\n        }\r\n    }).then((response) => {\r\n        dataRequested({userId, jwtToken, dispatch});\r\n    }).catch((error) => {\r\n        console.error(error);\r\n    })\r\n}"],"mappings":"AAAA,SAAQA,OAAO,QAAO,0CAA0C;AAChE,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAAQC,oBAAoB,EAAEC,kBAAkB,QAAO,YAAY;AAInE,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAO;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAwB,CAAC,KAAK;EAClF,MAAMP,OAAO,CAAC;IACVQ,GAAG,EAAEP,iBAAiB,GAAG,yBAAyB,GAAGI,MAAM;IAC3DI,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,eAAe,EAAG,SAAS,GAAGJ;IAClC;EACJ,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;IAClBL,QAAQ,CAACL,oBAAoB,CAACU,QAAQ,CAACC,IAAI,CAAC,CAAC;EACjD,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAO;EAAEZ,MAAM;EAAEC,QAAQ;EAAEC,QAAQ;EAAEW;AAA8B,CAAC,KAAK;EACnG,MAAMlB,OAAO,CAAC;IACVQ,GAAG,EAAEP,iBAAiB,GAAG,gBAAgB,GAAGI,MAAM,GAAG,GAAG,GAAGa,UAAU;IACrET,MAAM,EAAE,KAAK;IACbI,IAAI,EAAE;MAACR,MAAM;MAAEa;IAAU,CAAC;IAC1BR,OAAO,EAAE;MACLS,aAAa,EAAG,SAAS,GAAGb;IAChC;EACJ,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;IAClBL,QAAQ,CAACJ,kBAAkB,CAACS,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMK,cAAc,GAAG,MAAAA,CAAO;EAACf,MAAM;EAAEgB,SAAS;EAAEf,QAAQ;EAAEC;AAAgC,CAAC,KAAK;EACrG,MAAMP,OAAO,CAAC;IACVQ,GAAG,EAAEP,iBAAiB,GAAG,kBAAkB;IAC3CQ,MAAM,EAAE,MAAM;IACdI,IAAI,EAAE;MAACQ,SAAS;MAAEC,MAAM,EAAE;IAAK,CAAC;IAChCZ,OAAO,EAAE;MACLS,aAAa,EAAG,SAAS,GAAGb;IAChC;EACJ,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;IAClBR,aAAa,CAAC;MAACC,MAAM;MAAEC,QAAQ;MAAEC;IAAQ,CAAC,CAAC;EAC/C,CAAC,CAAC,CAACO,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}