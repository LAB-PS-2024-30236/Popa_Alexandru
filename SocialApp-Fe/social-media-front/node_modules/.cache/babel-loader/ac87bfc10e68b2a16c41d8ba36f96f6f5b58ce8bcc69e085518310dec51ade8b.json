{"ast":null,"code":"var _jsxFileName = \"D:\\\\an3_facultate\\\\sem1\\\\IS\\\\laboratoare\\\\SocialApp-Fe\\\\social-media-front\\\\src\\\\widgets\\\\settings-overview-widget\\\\ToggleDarkModeButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../components/core/Button/Button';\nimport \"./SettingsMainWidget.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleDarkModeButton = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    const darkModeSetting = localStorage.getItem('hasDarkMode') === 'true';\n    setIsDarkMode(darkModeSetting);\n  }, []);\n  const handleToggleDarkMode = () => {\n    const newDarkModeSetting = !isDarkMode;\n    localStorage.setItem('hasDarkMode', String(newDarkModeSetting));\n    setIsDarkMode(newDarkModeSetting);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-out-container\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      content: isDarkMode ? \"Change to white mode\" : \"Change to dark mode\",\n      onClick: handleToggleDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(ToggleDarkModeButton, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = ToggleDarkModeButton;\nexport default ToggleDarkModeButton;\nvar _c;\n$RefreshReg$(_c, \"ToggleDarkModeButton\");","map":{"version":3,"names":["React","useState","useEffect","Button","jsxDEV","_jsxDEV","ToggleDarkModeButton","_s","isDarkMode","setIsDarkMode","darkModeSetting","localStorage","getItem","handleToggleDarkMode","newDarkModeSetting","setItem","String","className","children","content","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/src/widgets/settings-overview-widget/ToggleDarkModeButton.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Button from '../../components/core/Button/Button';\r\nimport \"./SettingsMainWidget.css\";\r\n\r\nconst ToggleDarkModeButton: React.FC = () => {\r\n    const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const darkModeSetting = localStorage.getItem('hasDarkMode') === 'true';\r\n        setIsDarkMode(darkModeSetting);\r\n    }, []);\r\n\r\n    const handleToggleDarkMode = () => {\r\n        const newDarkModeSetting = !isDarkMode;\r\n        localStorage.setItem('hasDarkMode', String(newDarkModeSetting));\r\n        setIsDarkMode(newDarkModeSetting);\r\n    };\r\n\r\n    return (\r\n        <div className=\"log-out-container\">\r\n            <Button\r\n                content={isDarkMode ? \"Change to white mode\" : \"Change to dark mode\"}\r\n                onClick={handleToggleDarkMode}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleDarkModeButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qCAAqC;AACxD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,oBAA8B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ,MAAMQ,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,KAAK,MAAM;IACtEH,aAAa,CAACC,eAAe,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,kBAAkB,GAAG,CAACN,UAAU;IACtCG,YAAY,CAACI,OAAO,CAAC,aAAa,EAAEC,MAAM,CAACF,kBAAkB,CAAC,CAAC;IAC/DL,aAAa,CAACK,kBAAkB,CAAC;EACrC,CAAC;EAED,oBACIT,OAAA;IAAKY,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9Bb,OAAA,CAACF,MAAM;MACHgB,OAAO,EAAEX,UAAU,GAAG,sBAAsB,GAAG,qBAAsB;MACrEY,OAAO,EAAEP;IAAqB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACjB,EAAA,CAtBID,oBAA8B;AAAAmB,EAAA,GAA9BnB,oBAA8B;AAwBpC,eAAeA,oBAAoB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}