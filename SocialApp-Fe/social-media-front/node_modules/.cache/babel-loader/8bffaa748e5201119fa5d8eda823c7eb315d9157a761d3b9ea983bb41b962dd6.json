{"ast":null,"code":"import { useMemo, useRef, useReducer, useEffect, useCallback } from 'react';\nimport { fromEvent } from 'file-selector';\nimport { acceptPropAsAcceptAttr, reducer, initialState, isEventWithFiles, allFilesAccepted, noop, isFileAccepted, isValidSize, isValidQuantity, isEnterOrSpace, isIeOrEdge } from '@uploadthing/dropzone/core';\n\n/**\n * A React hook that creates a drag 'n' drop area.\n *\n * ### Example\n *\n * ```tsx\n * function MyDropzone() {\n *   const { getRootProps, getInputProps } = useDropzone({\n *     onDrop: acceptedFiles => {\n *       // do something with the File objects, e.g. upload to some server\n *     }\n *   });\n *\n *   return (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag and drop some files here, or click to select files</p>\n *     </div>\n *   )\n * }\n * ```\n */\nfunction useDropzone({\n  accept,\n  disabled = false,\n  maxSize = Number.POSITIVE_INFINITY,\n  minSize = 0,\n  multiple = true,\n  maxFiles = 0,\n  onDrop\n}) {\n  const acceptAttr = useMemo(() => acceptPropAsAcceptAttr(accept), [accept]);\n  const rootRef = useRef(null);\n  const inputRef = useRef(null);\n  const dragTargetsRef = useRef([]);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    // Update file dialog active state when the window is focused on\n    const onWindowFocus = () => {\n      // Execute the timeout only if the file dialog is opened in the browser\n      if (state.isFileDialogActive) {\n        setTimeout(() => {\n          if (inputRef.current) {\n            const {\n              files\n            } = inputRef.current;\n            if (!files?.length) {\n              dispatch({\n                type: \"closeDialog\"\n              });\n            }\n          }\n        }, 300);\n      }\n    };\n    window.addEventListener(\"focus\", onWindowFocus, false);\n    return () => {\n      window.removeEventListener(\"focus\", onWindowFocus, false);\n    };\n  }, [state.isFileDialogActive]);\n  useEffect(() => {\n    const onDocumentDrop = event => {\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n      if (rootRef.current?.contains(event.target)) return;\n      event.preventDefault();\n      dragTargetsRef.current = [];\n    };\n    const onDocumentDragOver = e => e.preventDefault();\n    document.addEventListener(\"dragover\", onDocumentDragOver, false);\n    document.addEventListener(\"drop\", onDocumentDrop, false);\n    return () => {\n      document.removeEventListener(\"dragover\", onDocumentDragOver);\n      document.removeEventListener(\"drop\", onDocumentDrop);\n    };\n  }, []);\n  const onDragEnter = useCallback(event => {\n    event.preventDefault();\n    event.persist();\n    dragTargetsRef.current = [...dragTargetsRef.current, event.target];\n    if (isEventWithFiles(event)) {\n      Promise.resolve(fromEvent(event)).then(files => {\n        if (event.isPropagationStopped()) return;\n        const fileCount = files.length;\n        const isDragAccept = fileCount > 0 && allFilesAccepted({\n          files: files,\n          accept: acceptAttr,\n          minSize,\n          maxSize,\n          multiple,\n          maxFiles\n        });\n        const isDragReject = fileCount > 0 && !isDragAccept;\n        dispatch({\n          type: \"setDraggedFiles\",\n          payload: {\n            isDragAccept,\n            isDragReject,\n            isDragActive: true\n          }\n        });\n      }).catch(noop);\n    }\n  }, [acceptAttr, maxFiles, maxSize, minSize, multiple]);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.persist();\n    const hasFiles = isEventWithFiles(event);\n    if (hasFiles && event.dataTransfer !== null) {\n      try {\n        event.dataTransfer.dropEffect = \"copy\";\n      } catch {\n        noop();\n      }\n    }\n    return false;\n  }, []);\n  const onDragLeave = useCallback(event => {\n    event.preventDefault();\n    event.persist();\n    // Only deactivate once the dropzone and all children have been left\n    const targets = dragTargetsRef.current.filter(target => rootRef.current?.contains(target));\n    // Make sure to remove a target present multiple times only once\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\n    const targetIdx = targets.indexOf(event.target);\n    if (targetIdx !== -1) targets.splice(targetIdx, 1);\n    dragTargetsRef.current = targets;\n    if (targets.length > 0) return;\n    dispatch({\n      type: \"setDraggedFiles\",\n      payload: {\n        isDragActive: false,\n        isDragAccept: false,\n        isDragReject: false\n      }\n    });\n  }, []);\n  const setFiles = useCallback(files => {\n    const acceptedFiles = [];\n    files.forEach(file => {\n      const accepted = isFileAccepted(file, acceptAttr);\n      const sizeMatch = isValidSize(file, minSize, maxSize);\n      if (accepted && sizeMatch) {\n        acceptedFiles.push(file);\n      }\n    });\n    if (!isValidQuantity(acceptedFiles, multiple, maxFiles)) {\n      acceptedFiles.splice(0);\n    }\n    dispatch({\n      type: \"setFiles\",\n      payload: {\n        acceptedFiles\n      }\n    });\n    onDrop(acceptedFiles);\n  }, [acceptAttr, maxFiles, maxSize, minSize, multiple, onDrop]);\n  const onDropCb = useCallback(event => {\n    event.preventDefault();\n    event.persist();\n    dragTargetsRef.current = [];\n    if (isEventWithFiles(event)) {\n      Promise.resolve(fromEvent(event)).then(files => {\n        if (event.isPropagationStopped()) return;\n        setFiles(files);\n      }).catch(noop);\n    }\n    dispatch({\n      type: \"reset\"\n    });\n  }, [setFiles]);\n  const openFileDialog = useCallback(() => {\n    if (inputRef.current) {\n      dispatch({\n        type: \"openDialog\"\n      });\n      inputRef.current.value = \"\";\n      inputRef.current.click();\n    }\n  }, []);\n  // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\n  const onKeyDown = useCallback(event => {\n    // Ignore keyboard events bubbling up the DOM tree\n    if (!rootRef.current?.isEqualNode(event.target)) return;\n    if (isEnterOrSpace(event)) {\n      event.preventDefault();\n      openFileDialog();\n    }\n  }, [openFileDialog]);\n  const onInputElementClick = useCallback(e => {\n    e.stopPropagation();\n  }, []);\n  // Update focus state for the dropzone\n  const onFocus = useCallback(() => dispatch({\n    type: \"focus\"\n  }), []);\n  const onBlur = useCallback(() => dispatch({\n    type: \"blur\"\n  }), []);\n  const onClick = useCallback(() => {\n    // In IE11/Edge the file-browser dialog is blocking, therefore,\n    // use setTimeout() to ensure React can handle state changes\n    isIeOrEdge() ? setTimeout(openFileDialog, 0) : openFileDialog();\n  }, [openFileDialog]);\n  const getRootProps = useMemo(() => () => ({\n    ref: rootRef,\n    role: \"presentation\",\n    ...(!disabled ? {\n      tabIndex: 0,\n      onKeyDown,\n      onFocus,\n      onBlur,\n      onClick,\n      onDragEnter,\n      onDragOver,\n      onDragLeave,\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      onDrop: onDropCb\n    } : {})\n  }), [disabled, onBlur, onClick, onDragEnter, onDragLeave, onDragOver, onDropCb, onFocus, onKeyDown]);\n  const getInputProps = useMemo(() => () => ({\n    ref: inputRef,\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    accept: acceptAttr,\n    multiple,\n    tabIndex: -1,\n    ...(!disabled ? {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      onChange: onDropCb,\n      onClick: onInputElementClick\n    } : {})\n  }), [acceptAttr, multiple, onDropCb, onInputElementClick, disabled]);\n  return {\n    ...state,\n    getRootProps,\n    getInputProps,\n    rootRef\n  };\n}\nexport { useDropzone };","map":{"version":3,"names":["useMemo","useRef","useReducer","useEffect","useCallback","fromEvent","acceptPropAsAcceptAttr","reducer","initialState","isEventWithFiles","allFilesAccepted","noop","isFileAccepted","isValidSize","isValidQuantity","isEnterOrSpace","isIeOrEdge","useDropzone","accept","disabled","maxSize","Number","POSITIVE_INFINITY","minSize","multiple","maxFiles","onDrop","acceptAttr","rootRef","inputRef","dragTargetsRef","state","dispatch","onWindowFocus","isFileDialogActive","setTimeout","current","files","length","type","window","addEventListener","removeEventListener","onDocumentDrop","event","contains","target","preventDefault","onDocumentDragOver","e","document","onDragEnter","persist","Promise","resolve","then","isPropagationStopped","fileCount","isDragAccept","isDragReject","payload","isDragActive","catch","onDragOver","hasFiles","dataTransfer","dropEffect","onDragLeave","targets","filter","targetIdx","indexOf","splice","setFiles","acceptedFiles","forEach","file","accepted","sizeMatch","push","onDropCb","openFileDialog","value","click","onKeyDown","isEqualNode","onInputElementClick","stopPropagation","onFocus","onBlur","onClick","getRootProps","ref","role","tabIndex","getInputProps","style","display","onChange"],"sources":["D:/an3_facultate/sem1/IS/laboratoare/SocialApp-Fe/social-media-front/node_modules/@uploadthing/dropzone/react/index.js"],"sourcesContent":["import { useMemo, useRef, useReducer, useEffect, useCallback } from 'react';\nimport { fromEvent } from 'file-selector';\nimport { acceptPropAsAcceptAttr, reducer, initialState, isEventWithFiles, allFilesAccepted, noop, isFileAccepted, isValidSize, isValidQuantity, isEnterOrSpace, isIeOrEdge } from '@uploadthing/dropzone/core';\n\n/**\n * A React hook that creates a drag 'n' drop area.\n *\n * ### Example\n *\n * ```tsx\n * function MyDropzone() {\n *   const { getRootProps, getInputProps } = useDropzone({\n *     onDrop: acceptedFiles => {\n *       // do something with the File objects, e.g. upload to some server\n *     }\n *   });\n *\n *   return (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag and drop some files here, or click to select files</p>\n *     </div>\n *   )\n * }\n * ```\n */ function useDropzone({ accept, disabled = false, maxSize = Number.POSITIVE_INFINITY, minSize = 0, multiple = true, maxFiles = 0, onDrop }) {\n    const acceptAttr = useMemo(()=>acceptPropAsAcceptAttr(accept), [\n        accept\n    ]);\n    const rootRef = useRef(null);\n    const inputRef = useRef(null);\n    const dragTargetsRef = useRef([]);\n    const [state, dispatch] = useReducer(reducer, initialState);\n    useEffect(()=>{\n        // Update file dialog active state when the window is focused on\n        const onWindowFocus = ()=>{\n            // Execute the timeout only if the file dialog is opened in the browser\n            if (state.isFileDialogActive) {\n                setTimeout(()=>{\n                    if (inputRef.current) {\n                        const { files } = inputRef.current;\n                        if (!files?.length) {\n                            dispatch({\n                                type: \"closeDialog\"\n                            });\n                        }\n                    }\n                }, 300);\n            }\n        };\n        window.addEventListener(\"focus\", onWindowFocus, false);\n        return ()=>{\n            window.removeEventListener(\"focus\", onWindowFocus, false);\n        };\n    }, [\n        state.isFileDialogActive\n    ]);\n    useEffect(()=>{\n        const onDocumentDrop = (event)=>{\n            // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n            if (rootRef.current?.contains(event.target)) return;\n            event.preventDefault();\n            dragTargetsRef.current = [];\n        };\n        const onDocumentDragOver = (e)=>e.preventDefault();\n        document.addEventListener(\"dragover\", onDocumentDragOver, false);\n        document.addEventListener(\"drop\", onDocumentDrop, false);\n        return ()=>{\n            document.removeEventListener(\"dragover\", onDocumentDragOver);\n            document.removeEventListener(\"drop\", onDocumentDrop);\n        };\n    }, []);\n    const onDragEnter = useCallback((event)=>{\n        event.preventDefault();\n        event.persist();\n        dragTargetsRef.current = [\n            ...dragTargetsRef.current,\n            event.target\n        ];\n        if (isEventWithFiles(event)) {\n            Promise.resolve(fromEvent(event)).then((files)=>{\n                if (event.isPropagationStopped()) return;\n                const fileCount = files.length;\n                const isDragAccept = fileCount > 0 && allFilesAccepted({\n                    files: files,\n                    accept: acceptAttr,\n                    minSize,\n                    maxSize,\n                    multiple,\n                    maxFiles\n                });\n                const isDragReject = fileCount > 0 && !isDragAccept;\n                dispatch({\n                    type: \"setDraggedFiles\",\n                    payload: {\n                        isDragAccept,\n                        isDragReject,\n                        isDragActive: true\n                    }\n                });\n            }).catch(noop);\n        }\n    }, [\n        acceptAttr,\n        maxFiles,\n        maxSize,\n        minSize,\n        multiple\n    ]);\n    const onDragOver = useCallback((event)=>{\n        event.preventDefault();\n        event.persist();\n        const hasFiles = isEventWithFiles(event);\n        if (hasFiles && event.dataTransfer !== null) {\n            try {\n                event.dataTransfer.dropEffect = \"copy\";\n            } catch  {\n                noop();\n            }\n        }\n        return false;\n    }, []);\n    const onDragLeave = useCallback((event)=>{\n        event.preventDefault();\n        event.persist();\n        // Only deactivate once the dropzone and all children have been left\n        const targets = dragTargetsRef.current.filter((target)=>rootRef.current?.contains(target));\n        // Make sure to remove a target present multiple times only once\n        // (Firefox may fire dragenter/dragleave multiple times on the same element)\n        const targetIdx = targets.indexOf(event.target);\n        if (targetIdx !== -1) targets.splice(targetIdx, 1);\n        dragTargetsRef.current = targets;\n        if (targets.length > 0) return;\n        dispatch({\n            type: \"setDraggedFiles\",\n            payload: {\n                isDragActive: false,\n                isDragAccept: false,\n                isDragReject: false\n            }\n        });\n    }, []);\n    const setFiles = useCallback((files)=>{\n        const acceptedFiles = [];\n        files.forEach((file)=>{\n            const accepted = isFileAccepted(file, acceptAttr);\n            const sizeMatch = isValidSize(file, minSize, maxSize);\n            if (accepted && sizeMatch) {\n                acceptedFiles.push(file);\n            }\n        });\n        if (!isValidQuantity(acceptedFiles, multiple, maxFiles)) {\n            acceptedFiles.splice(0);\n        }\n        dispatch({\n            type: \"setFiles\",\n            payload: {\n                acceptedFiles\n            }\n        });\n        onDrop(acceptedFiles);\n    }, [\n        acceptAttr,\n        maxFiles,\n        maxSize,\n        minSize,\n        multiple,\n        onDrop\n    ]);\n    const onDropCb = useCallback((event)=>{\n        event.preventDefault();\n        event.persist();\n        dragTargetsRef.current = [];\n        if (isEventWithFiles(event)) {\n            Promise.resolve(fromEvent(event)).then((files)=>{\n                if (event.isPropagationStopped()) return;\n                setFiles(files);\n            }).catch(noop);\n        }\n        dispatch({\n            type: \"reset\"\n        });\n    }, [\n        setFiles\n    ]);\n    const openFileDialog = useCallback(()=>{\n        if (inputRef.current) {\n            dispatch({\n                type: \"openDialog\"\n            });\n            inputRef.current.value = \"\";\n            inputRef.current.click();\n        }\n    }, []);\n    // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\n    const onKeyDown = useCallback((event)=>{\n        // Ignore keyboard events bubbling up the DOM tree\n        if (!rootRef.current?.isEqualNode(event.target)) return;\n        if (isEnterOrSpace(event)) {\n            event.preventDefault();\n            openFileDialog();\n        }\n    }, [\n        openFileDialog\n    ]);\n    const onInputElementClick = useCallback((e)=>{\n        e.stopPropagation();\n    }, []);\n    // Update focus state for the dropzone\n    const onFocus = useCallback(()=>dispatch({\n            type: \"focus\"\n        }), []);\n    const onBlur = useCallback(()=>dispatch({\n            type: \"blur\"\n        }), []);\n    const onClick = useCallback(()=>{\n        // In IE11/Edge the file-browser dialog is blocking, therefore,\n        // use setTimeout() to ensure React can handle state changes\n        isIeOrEdge() ? setTimeout(openFileDialog, 0) : openFileDialog();\n    }, [\n        openFileDialog\n    ]);\n    const getRootProps = useMemo(()=>()=>({\n                ref: rootRef,\n                role: \"presentation\",\n                ...!disabled ? {\n                    tabIndex: 0,\n                    onKeyDown,\n                    onFocus,\n                    onBlur,\n                    onClick,\n                    onDragEnter,\n                    onDragOver,\n                    onDragLeave,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    onDrop: onDropCb\n                } : {}\n            }), [\n        disabled,\n        onBlur,\n        onClick,\n        onDragEnter,\n        onDragLeave,\n        onDragOver,\n        onDropCb,\n        onFocus,\n        onKeyDown\n    ]);\n    const getInputProps = useMemo(()=>()=>({\n                ref: inputRef,\n                type: \"file\",\n                style: {\n                    display: \"none\"\n                },\n                accept: acceptAttr,\n                multiple,\n                tabIndex: -1,\n                ...!disabled ? {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    onChange: onDropCb,\n                    onClick: onInputElementClick\n                } : {}\n            }), [\n        acceptAttr,\n        multiple,\n        onDropCb,\n        onInputElementClick,\n        disabled\n    ]);\n    return {\n        ...state,\n        getRootProps,\n        getInputProps,\n        rootRef\n    };\n}\n\nexport { useDropzone };\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC3E,SAASC,SAAS,QAAQ,eAAe;AACzC,SAASC,sBAAsB,EAAEC,OAAO,EAAEC,YAAY,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,IAAI,EAAEC,cAAc,EAAEC,WAAW,EAAEC,eAAe,EAAEC,cAAc,EAAEC,UAAU,QAAQ,4BAA4B;;AAE9M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,SAASC,WAAWA,CAAC;EAAEC,MAAM;EAAEC,QAAQ,GAAG,KAAK;EAAEC,OAAO,GAAGC,MAAM,CAACC,iBAAiB;EAAEC,OAAO,GAAG,CAAC;EAAEC,QAAQ,GAAG,IAAI;EAAEC,QAAQ,GAAG,CAAC;EAAEC;AAAO,CAAC,EAAE;EAC3I,MAAMC,UAAU,GAAG3B,OAAO,CAAC,MAAIM,sBAAsB,CAACY,MAAM,CAAC,EAAE,CAC3DA,MAAM,CACT,CAAC;EACF,MAAMU,OAAO,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM4B,QAAQ,GAAG5B,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM6B,cAAc,GAAG7B,MAAM,CAAC,EAAE,CAAC;EACjC,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,UAAU,CAACK,OAAO,EAAEC,YAAY,CAAC;EAC3DL,SAAS,CAAC,MAAI;IACV;IACA,MAAM8B,aAAa,GAAGA,CAAA,KAAI;MACtB;MACA,IAAIF,KAAK,CAACG,kBAAkB,EAAE;QAC1BC,UAAU,CAAC,MAAI;UACX,IAAIN,QAAQ,CAACO,OAAO,EAAE;YAClB,MAAM;cAAEC;YAAM,CAAC,GAAGR,QAAQ,CAACO,OAAO;YAClC,IAAI,CAACC,KAAK,EAAEC,MAAM,EAAE;cAChBN,QAAQ,CAAC;gBACLO,IAAI,EAAE;cACV,CAAC,CAAC;YACN;UACJ;QACJ,CAAC,EAAE,GAAG,CAAC;MACX;IACJ,CAAC;IACDC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAER,aAAa,EAAE,KAAK,CAAC;IACtD,OAAO,MAAI;MACPO,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAET,aAAa,EAAE,KAAK,CAAC;IAC7D,CAAC;EACL,CAAC,EAAE,CACCF,KAAK,CAACG,kBAAkB,CAC3B,CAAC;EACF/B,SAAS,CAAC,MAAI;IACV,MAAMwC,cAAc,GAAIC,KAAK,IAAG;MAC5B;MACA,IAAIhB,OAAO,CAACQ,OAAO,EAAES,QAAQ,CAACD,KAAK,CAACE,MAAM,CAAC,EAAE;MAC7CF,KAAK,CAACG,cAAc,CAAC,CAAC;MACtBjB,cAAc,CAACM,OAAO,GAAG,EAAE;IAC/B,CAAC;IACD,MAAMY,kBAAkB,GAAIC,CAAC,IAAGA,CAAC,CAACF,cAAc,CAAC,CAAC;IAClDG,QAAQ,CAACT,gBAAgB,CAAC,UAAU,EAAEO,kBAAkB,EAAE,KAAK,CAAC;IAChEE,QAAQ,CAACT,gBAAgB,CAAC,MAAM,EAAEE,cAAc,EAAE,KAAK,CAAC;IACxD,OAAO,MAAI;MACPO,QAAQ,CAACR,mBAAmB,CAAC,UAAU,EAAEM,kBAAkB,CAAC;MAC5DE,QAAQ,CAACR,mBAAmB,CAAC,MAAM,EAAEC,cAAc,CAAC;IACxD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,MAAMQ,WAAW,GAAG/C,WAAW,CAAEwC,KAAK,IAAG;IACrCA,KAAK,CAACG,cAAc,CAAC,CAAC;IACtBH,KAAK,CAACQ,OAAO,CAAC,CAAC;IACftB,cAAc,CAACM,OAAO,GAAG,CACrB,GAAGN,cAAc,CAACM,OAAO,EACzBQ,KAAK,CAACE,MAAM,CACf;IACD,IAAIrC,gBAAgB,CAACmC,KAAK,CAAC,EAAE;MACzBS,OAAO,CAACC,OAAO,CAACjD,SAAS,CAACuC,KAAK,CAAC,CAAC,CAACW,IAAI,CAAElB,KAAK,IAAG;QAC5C,IAAIO,KAAK,CAACY,oBAAoB,CAAC,CAAC,EAAE;QAClC,MAAMC,SAAS,GAAGpB,KAAK,CAACC,MAAM;QAC9B,MAAMoB,YAAY,GAAGD,SAAS,GAAG,CAAC,IAAI/C,gBAAgB,CAAC;UACnD2B,KAAK,EAAEA,KAAK;UACZnB,MAAM,EAAES,UAAU;UAClBJ,OAAO;UACPH,OAAO;UACPI,QAAQ;UACRC;QACJ,CAAC,CAAC;QACF,MAAMkC,YAAY,GAAGF,SAAS,GAAG,CAAC,IAAI,CAACC,YAAY;QACnD1B,QAAQ,CAAC;UACLO,IAAI,EAAE,iBAAiB;UACvBqB,OAAO,EAAE;YACLF,YAAY;YACZC,YAAY;YACZE,YAAY,EAAE;UAClB;QACJ,CAAC,CAAC;MACN,CAAC,CAAC,CAACC,KAAK,CAACnD,IAAI,CAAC;IAClB;EACJ,CAAC,EAAE,CACCgB,UAAU,EACVF,QAAQ,EACRL,OAAO,EACPG,OAAO,EACPC,QAAQ,CACX,CAAC;EACF,MAAMuC,UAAU,GAAG3D,WAAW,CAAEwC,KAAK,IAAG;IACpCA,KAAK,CAACG,cAAc,CAAC,CAAC;IACtBH,KAAK,CAACQ,OAAO,CAAC,CAAC;IACf,MAAMY,QAAQ,GAAGvD,gBAAgB,CAACmC,KAAK,CAAC;IACxC,IAAIoB,QAAQ,IAAIpB,KAAK,CAACqB,YAAY,KAAK,IAAI,EAAE;MACzC,IAAI;QACArB,KAAK,CAACqB,YAAY,CAACC,UAAU,GAAG,MAAM;MAC1C,CAAC,CAAC,MAAO;QACLvD,IAAI,CAAC,CAAC;MACV;IACJ;IACA,OAAO,KAAK;EAChB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMwD,WAAW,GAAG/D,WAAW,CAAEwC,KAAK,IAAG;IACrCA,KAAK,CAACG,cAAc,CAAC,CAAC;IACtBH,KAAK,CAACQ,OAAO,CAAC,CAAC;IACf;IACA,MAAMgB,OAAO,GAAGtC,cAAc,CAACM,OAAO,CAACiC,MAAM,CAAEvB,MAAM,IAAGlB,OAAO,CAACQ,OAAO,EAAES,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1F;IACA;IACA,MAAMwB,SAAS,GAAGF,OAAO,CAACG,OAAO,CAAC3B,KAAK,CAACE,MAAM,CAAC;IAC/C,IAAIwB,SAAS,KAAK,CAAC,CAAC,EAAEF,OAAO,CAACI,MAAM,CAACF,SAAS,EAAE,CAAC,CAAC;IAClDxC,cAAc,CAACM,OAAO,GAAGgC,OAAO;IAChC,IAAIA,OAAO,CAAC9B,MAAM,GAAG,CAAC,EAAE;IACxBN,QAAQ,CAAC;MACLO,IAAI,EAAE,iBAAiB;MACvBqB,OAAO,EAAE;QACLC,YAAY,EAAE,KAAK;QACnBH,YAAY,EAAE,KAAK;QACnBC,YAAY,EAAE;MAClB;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,MAAMc,QAAQ,GAAGrE,WAAW,CAAEiC,KAAK,IAAG;IAClC,MAAMqC,aAAa,GAAG,EAAE;IACxBrC,KAAK,CAACsC,OAAO,CAAEC,IAAI,IAAG;MAClB,MAAMC,QAAQ,GAAGjE,cAAc,CAACgE,IAAI,EAAEjD,UAAU,CAAC;MACjD,MAAMmD,SAAS,GAAGjE,WAAW,CAAC+D,IAAI,EAAErD,OAAO,EAAEH,OAAO,CAAC;MACrD,IAAIyD,QAAQ,IAAIC,SAAS,EAAE;QACvBJ,aAAa,CAACK,IAAI,CAACH,IAAI,CAAC;MAC5B;IACJ,CAAC,CAAC;IACF,IAAI,CAAC9D,eAAe,CAAC4D,aAAa,EAAElD,QAAQ,EAAEC,QAAQ,CAAC,EAAE;MACrDiD,aAAa,CAACF,MAAM,CAAC,CAAC,CAAC;IAC3B;IACAxC,QAAQ,CAAC;MACLO,IAAI,EAAE,UAAU;MAChBqB,OAAO,EAAE;QACLc;MACJ;IACJ,CAAC,CAAC;IACFhD,MAAM,CAACgD,aAAa,CAAC;EACzB,CAAC,EAAE,CACC/C,UAAU,EACVF,QAAQ,EACRL,OAAO,EACPG,OAAO,EACPC,QAAQ,EACRE,MAAM,CACT,CAAC;EACF,MAAMsD,QAAQ,GAAG5E,WAAW,CAAEwC,KAAK,IAAG;IAClCA,KAAK,CAACG,cAAc,CAAC,CAAC;IACtBH,KAAK,CAACQ,OAAO,CAAC,CAAC;IACftB,cAAc,CAACM,OAAO,GAAG,EAAE;IAC3B,IAAI3B,gBAAgB,CAACmC,KAAK,CAAC,EAAE;MACzBS,OAAO,CAACC,OAAO,CAACjD,SAAS,CAACuC,KAAK,CAAC,CAAC,CAACW,IAAI,CAAElB,KAAK,IAAG;QAC5C,IAAIO,KAAK,CAACY,oBAAoB,CAAC,CAAC,EAAE;QAClCiB,QAAQ,CAACpC,KAAK,CAAC;MACnB,CAAC,CAAC,CAACyB,KAAK,CAACnD,IAAI,CAAC;IAClB;IACAqB,QAAQ,CAAC;MACLO,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC,EAAE,CACCkC,QAAQ,CACX,CAAC;EACF,MAAMQ,cAAc,GAAG7E,WAAW,CAAC,MAAI;IACnC,IAAIyB,QAAQ,CAACO,OAAO,EAAE;MAClBJ,QAAQ,CAAC;QACLO,IAAI,EAAE;MACV,CAAC,CAAC;MACFV,QAAQ,CAACO,OAAO,CAAC8C,KAAK,GAAG,EAAE;MAC3BrD,QAAQ,CAACO,OAAO,CAAC+C,KAAK,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAMC,SAAS,GAAGhF,WAAW,CAAEwC,KAAK,IAAG;IACnC;IACA,IAAI,CAAChB,OAAO,CAACQ,OAAO,EAAEiD,WAAW,CAACzC,KAAK,CAACE,MAAM,CAAC,EAAE;IACjD,IAAI/B,cAAc,CAAC6B,KAAK,CAAC,EAAE;MACvBA,KAAK,CAACG,cAAc,CAAC,CAAC;MACtBkC,cAAc,CAAC,CAAC;IACpB;EACJ,CAAC,EAAE,CACCA,cAAc,CACjB,CAAC;EACF,MAAMK,mBAAmB,GAAGlF,WAAW,CAAE6C,CAAC,IAAG;IACzCA,CAAC,CAACsC,eAAe,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAMC,OAAO,GAAGpF,WAAW,CAAC,MAAI4B,QAAQ,CAAC;IACjCO,IAAI,EAAE;EACV,CAAC,CAAC,EAAE,EAAE,CAAC;EACX,MAAMkD,MAAM,GAAGrF,WAAW,CAAC,MAAI4B,QAAQ,CAAC;IAChCO,IAAI,EAAE;EACV,CAAC,CAAC,EAAE,EAAE,CAAC;EACX,MAAMmD,OAAO,GAAGtF,WAAW,CAAC,MAAI;IAC5B;IACA;IACAY,UAAU,CAAC,CAAC,GAAGmB,UAAU,CAAC8C,cAAc,EAAE,CAAC,CAAC,GAAGA,cAAc,CAAC,CAAC;EACnE,CAAC,EAAE,CACCA,cAAc,CACjB,CAAC;EACF,MAAMU,YAAY,GAAG3F,OAAO,CAAC,MAAI,OAAK;IAC1B4F,GAAG,EAAEhE,OAAO;IACZiE,IAAI,EAAE,cAAc;IACpB,IAAG,CAAC1E,QAAQ,GAAG;MACX2E,QAAQ,EAAE,CAAC;MACXV,SAAS;MACTI,OAAO;MACPC,MAAM;MACNC,OAAO;MACPvC,WAAW;MACXY,UAAU;MACVI,WAAW;MACX;MACAzC,MAAM,EAAEsD;IACZ,CAAC,GAAG,CAAC,CAAC;EACV,CAAC,CAAC,EAAE,CACR7D,QAAQ,EACRsE,MAAM,EACNC,OAAO,EACPvC,WAAW,EACXgB,WAAW,EACXJ,UAAU,EACViB,QAAQ,EACRQ,OAAO,EACPJ,SAAS,CACZ,CAAC;EACF,MAAMW,aAAa,GAAG/F,OAAO,CAAC,MAAI,OAAK;IAC3B4F,GAAG,EAAE/D,QAAQ;IACbU,IAAI,EAAE,MAAM;IACZyD,KAAK,EAAE;MACHC,OAAO,EAAE;IACb,CAAC;IACD/E,MAAM,EAAES,UAAU;IAClBH,QAAQ;IACRsE,QAAQ,EAAE,CAAC,CAAC;IACZ,IAAG,CAAC3E,QAAQ,GAAG;MACX;MACA+E,QAAQ,EAAElB,QAAQ;MAClBU,OAAO,EAAEJ;IACb,CAAC,GAAG,CAAC,CAAC;EACV,CAAC,CAAC,EAAE,CACR3D,UAAU,EACVH,QAAQ,EACRwD,QAAQ,EACRM,mBAAmB,EACnBnE,QAAQ,CACX,CAAC;EACF,OAAO;IACH,GAAGY,KAAK;IACR4D,YAAY;IACZI,aAAa;IACbnE;EACJ,CAAC;AACL;AAEA,SAASX,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}